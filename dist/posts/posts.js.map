{"version":3,"file":"posts.js","sources":["../../src/blocks/posts/posts.ts"],"sourcesContent":["import { html, render } from 'lit';\nimport { createOptimizedPicture } from '../../utils/createOptimizedPicture';\nimport { fetchText } from '../../utils/fetch.ts';\nimport { SiteMapEntry } from '../../services/sheet.service.ts';\n\ninterface PostArgs {\n  postUrl: string;\n  headline?: string;\n  text?: string;\n  picture: HTMLPictureElement;\n}\n\nconst postTemplate = (args: PostArgs) => {\n  const { postUrl, headline, text, picture } = args;\n  return html`\n    <article>\n      <a href=\"${postUrl}\" class=\"image\">${picture}</a>\n      <h3>${headline}</h3>\n      <p>${text?.slice(0, 200)}</p>\n      <ul class=\"actions\">\n        <li><a href=\"${postUrl}\" class=\"button\">More</a></li>\n      </ul>\n    </article>\n  `;\n};\n\nconst template = (posts: PostArgs[]) => {\n  return posts.map((post) => postTemplate(post));\n};\n\nexport default async function (block: HTMLElement) {\n  block.innerHTML = '';\n\n  const req = await fetch(`${window.hlx.codeBasePath}/query-index.json`);\n  const response = await req.json();\n\n  const data = response.data.filter((item) => {\n    return item.path.includes('/posts');\n  });\n\n  const postsPreview = await Promise.all(\n    data.map(async (post: SiteMapEntry) => await fetchText(`${post.path}.plain.html`))\n  );\n\n  const postsPreviewHtml = postsPreview.map((res) => {\n    const parser = new DOMParser();\n    return parser.parseFromString(res, 'text/html');\n  });\n\n  const posts = postsPreviewHtml.map((doc, index) => {\n    return {\n      postUrl: `${window.hlx.codeBasePath}${data[index].path}`,\n      headline: doc.querySelector('h1')?.innerText || doc.querySelector('h2')?.innerText,\n      text: doc.querySelector('p')?.innerText?.trim(),\n      picture: createOptimizedPicture({ src: data[index].image, alt: data[index].imagealt }),\n    };\n  });\n\n  block.style.removeProperty('display');\n  render(template(posts), block);\n}\n"],"names":["postTemplate","args","postUrl","headline","text","picture","html","template","posts","post","block","data","item","fetchText","res","doc","index","_a","_b","_d","_c","createOptimizedPicture","render"],"mappings":"6IAYA,MAAMA,EAAgBC,GAAmB,CACvC,KAAM,CAAE,QAAAC,EAAS,SAAAC,EAAU,KAAAC,EAAM,QAAAC,GAAYJ,EACtC,OAAAK,sBAEQJ,CAAO,mBAAmBG,CAAO,WACtCF,CAAQ,WACTC,GAAA,YAAAA,EAAM,MAAM,EAAG,IAAI,wCAEPF,CAAO,+CAI9B,EAEMK,EAAYC,GACTA,EAAM,IAAKC,GAAST,EAAaS,CAAI,CAAC,EAG/C,eAAAD,EAA+BE,EAAoB,CACjDA,EAAM,UAAY,GAKlB,MAAMC,GAFW,MADL,MAAM,MAAM,GAAG,OAAO,IAAI,YAAY,mBAAmB,GAC1C,QAEL,KAAK,OAAQC,GAC1BA,EAAK,KAAK,SAAS,QAAQ,CACnC,EAWKJ,GATe,MAAM,QAAQ,IACjCG,EAAK,IAAI,MAAOF,GAAuB,MAAMI,EAAU,GAAGJ,EAAK,IAAI,aAAa,CAAC,CAAA,GAG7C,IAAKK,GAC1B,IAAI,YACL,gBAAgBA,EAAK,WAAW,CAC/C,EAE8B,IAAI,CAACC,EAAKC,IAAU,aAC1C,MAAA,CACL,QAAS,GAAG,OAAO,IAAI,YAAY,GAAGL,EAAKK,CAAK,EAAE,IAAI,GACtD,WAAUC,EAAAF,EAAI,cAAc,IAAI,IAAtB,YAAAE,EAAyB,cAAaC,EAAAH,EAAI,cAAc,IAAI,IAAtB,YAAAG,EAAyB,WACzE,MAAMC,GAAAC,EAAAL,EAAI,cAAc,GAAG,IAArB,YAAAK,EAAwB,YAAxB,YAAAD,EAAmC,OACzC,QAASE,EAAuB,CAAE,IAAKV,EAAKK,CAAK,EAAE,MAAO,IAAKL,EAAKK,CAAK,EAAE,SAAU,CAAA,CACvF,CACD,EAEKN,EAAA,MAAM,eAAe,SAAS,EAC7BY,EAAAf,EAASC,CAAK,EAAGE,CAAK,CAC/B"}