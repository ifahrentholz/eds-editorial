{"version":3,"file":"createOptimizedPicture.hlpdaoeH.js","sources":["../../src/utils/RuntimeCache.ts","../../src/services/fetch.service.ts","../../src/services/sitemap.service.ts","../../src/utils/createOptimizedPicture.ts"],"sourcesContent":["export class RuntimeCache {\n  private runtimeCache: Map<string, any> = new Map();\n\n  public get<T>(key: string): T | undefined {\n    return this.runtimeCache.get(key);\n  }\n\n  public set<T>(key: string, value: T): void {\n    this.runtimeCache.set(key, value);\n  }\n\n  public has(key: string): boolean {\n    return this.runtimeCache.has(key);\n  }\n\n  public delete(key: string): void {\n    this.runtimeCache.delete(key);\n  }\n}\n","import { RuntimeCache } from '../utils/RuntimeCache';\n\nexport interface FetchServiceCacheOptions {\n  cacheType?: 'runtime'; // 'local' | 'session' | \"request\" can be added later\n}\n\nexport interface FetchServiceOptions {\n  fetchOptions?: RequestInit;\n  cacheOptions?: FetchServiceCacheOptions;\n}\n\nclass FetchService {\n  private requestPipeline: Map<string, Promise<Response>> = new Map();\n\n  private runtimeCache = new RuntimeCache();\n\n  public async fetchJson<T>(url: string, options: FetchServiceOptions = {}): Promise<T> {\n    const { cacheOptions } = options;\n\n    const cachedData = this.getCachedData<T>(url, cacheOptions);\n    if (cachedData !== null) return cachedData;\n\n    const pipelinedRequest = this.requestPipeline.get(url);\n    if (pipelinedRequest !== undefined) return this.getResponseJSON(await pipelinedRequest);\n\n    const request = fetch(url, options.fetchOptions);\n    this.requestPipeline.set(url, request);\n\n    const response = await request;\n    this.requestPipeline.delete(url);\n    const responseJson = await this.getResponseJSON<T>(response);\n\n    this.setCachedData(url, responseJson, cacheOptions);\n    return responseJson;\n  }\n\n  public async fetchText(url: string, options: FetchServiceOptions = {}): Promise<string> {\n    const { cacheOptions } = options;\n\n    const cachedData = this.getCachedData<string>(url, cacheOptions);\n    if (cachedData !== null) return cachedData;\n\n    const pipelinedRequest = this.requestPipeline.get(url);\n    if (pipelinedRequest !== undefined) return this.getResponseText(await pipelinedRequest);\n\n    const request = fetch(url, options.fetchOptions);\n    this.requestPipeline.set(url, request);\n\n    const response = await request;\n    this.requestPipeline.delete(url);\n    const responseText = await this.getResponseText(response);\n\n    this.setCachedData(url, responseText, cacheOptions);\n    return responseText;\n  }\n\n  private async getResponseJSON<T>(response: Response): Promise<T> {\n    const responseClone = response.clone();\n    const responseJson = await responseClone.json();\n    return responseJson;\n  }\n\n  private async getResponseText(response: Response): Promise<string> {\n    const responseClone = response.clone();\n    const responseText = await responseClone.text();\n    return responseText;\n  }\n\n  private getCachedData<T>(url: string, cacheOptions?: FetchServiceCacheOptions): T | null {\n    if (cacheOptions?.cacheType === 'runtime') {\n      return this.runtimeCache.get(url) ?? null;\n    }\n    return null;\n  }\n\n  private setCachedData<T>(url: string, data: T, cacheOptions?: FetchServiceCacheOptions): void {\n    if (cacheOptions?.cacheType === 'runtime') {\n      this.runtimeCache.set(url, data);\n    }\n  }\n}\n\nexport default new FetchService();\n","import { SheetsResponse, Sitemap } from '../shared.types.ts';\nimport FetchService from './fetch.service.ts';\n\nexport class SitemapService {\n  async getSiteMap(): Promise<Sitemap> {\n    return <Sitemap>(await this.getQueryIndex()).data;\n  }\n\n  async getQueryIndex(): Promise<SheetsResponse> {\n    return await FetchService.fetchJson('/query-index.json', {\n      cacheOptions: {\n        cacheType: 'runtime',\n      },\n    });\n  }\n}\n\nexport default new SitemapService();\n","/**\n * Returns a picture element with webp and fallbacks\n * @param {string} src The image URL\n * @param {string} [alt] The image alternative text\n * @param {boolean} [eager] Set loading attribute to eager\n * @param {Array} [breakpoints] Breakpoints and corresponding params (eg. width)\n * @returns {Element} The picture element\n */\n\ninterface CreateOptimizedPictureArgs {\n  src: string;\n  alt: string;\n  width: string;\n  height: string;\n  eager?: boolean;\n  breakpoints?: Array<Record<string, string>>;\n}\n\nexport function createOptimizedPicture(args: CreateOptimizedPictureArgs): HTMLPictureElement {\n  const {\n    src,\n    alt,\n    eager = false,\n    width,\n    height,\n    breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }],\n  } = args;\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      img.setAttribute('width', width);\n      img.setAttribute('height', height);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}\n"],"names":["RuntimeCache","key","value","FetchService","url","options","cacheOptions","cachedData","pipelinedRequest","request","response","responseJson","responseText","data","FetchService$1","SitemapService","SitemapService$1","createOptimizedPicture","args","src","alt","eager","width","height","breakpoints","picture","pathname","ext","br","source","i","img"],"mappings":"AAAO,MAAMA,CAAa,CAAnB,aAAA,CACG,KAAA,iBAAqC,GAAI,CAE1C,IAAOC,EAA4B,CACjC,OAAA,KAAK,aAAa,IAAIA,CAAG,CAClC,CAEO,IAAOA,EAAaC,EAAgB,CACpC,KAAA,aAAa,IAAID,EAAKC,CAAK,CAClC,CAEO,IAAID,EAAsB,CACxB,OAAA,KAAK,aAAa,IAAIA,CAAG,CAClC,CAEO,OAAOA,EAAmB,CAC1B,KAAA,aAAa,OAAOA,CAAG,CAC9B,CACF,CCPA,MAAME,CAAa,CAAnB,aAAA,CACU,KAAA,oBAAsD,IAEtD,KAAA,aAAe,IAAIH,CAAa,CAExC,MAAa,UAAaI,EAAaC,EAA+B,GAAgB,CAC9E,KAAA,CAAE,aAAAC,CAAiB,EAAAD,EAEnBE,EAAa,KAAK,cAAiBH,EAAKE,CAAY,EAC1D,GAAIC,IAAe,KAAa,OAAAA,EAEhC,MAAMC,EAAmB,KAAK,gBAAgB,IAAIJ,CAAG,EACrD,GAAII,IAAqB,OAAkB,OAAA,KAAK,gBAAgB,MAAMA,CAAgB,EAEtF,MAAMC,EAAU,MAAML,EAAKC,EAAQ,YAAY,EAC1C,KAAA,gBAAgB,IAAID,EAAKK,CAAO,EAErC,MAAMC,EAAW,MAAMD,EAClB,KAAA,gBAAgB,OAAOL,CAAG,EAC/B,MAAMO,EAAe,MAAM,KAAK,gBAAmBD,CAAQ,EAEtD,YAAA,cAAcN,EAAKO,EAAcL,CAAY,EAC3CK,CACT,CAEA,MAAa,UAAUP,EAAaC,EAA+B,GAAqB,CAChF,KAAA,CAAE,aAAAC,CAAiB,EAAAD,EAEnBE,EAAa,KAAK,cAAsBH,EAAKE,CAAY,EAC/D,GAAIC,IAAe,KAAa,OAAAA,EAEhC,MAAMC,EAAmB,KAAK,gBAAgB,IAAIJ,CAAG,EACrD,GAAII,IAAqB,OAAkB,OAAA,KAAK,gBAAgB,MAAMA,CAAgB,EAEtF,MAAMC,EAAU,MAAML,EAAKC,EAAQ,YAAY,EAC1C,KAAA,gBAAgB,IAAID,EAAKK,CAAO,EAErC,MAAMC,EAAW,MAAMD,EAClB,KAAA,gBAAgB,OAAOL,CAAG,EAC/B,MAAMQ,EAAe,MAAM,KAAK,gBAAgBF,CAAQ,EAEnD,YAAA,cAAcN,EAAKQ,EAAcN,CAAY,EAC3CM,CACT,CAEA,MAAc,gBAAmBF,EAAgC,CAGxD,OADc,MADCA,EAAS,QACU,MAE3C,CAEA,MAAc,gBAAgBA,EAAqC,CAG1D,OADc,MADCA,EAAS,QACU,MAE3C,CAEQ,cAAiBN,EAAaE,EAAmD,CACnF,OAAAA,GAAA,YAAAA,EAAc,aAAc,UACvB,KAAK,aAAa,IAAIF,CAAG,GAAK,KAEhC,IACT,CAEQ,cAAiBA,EAAaS,EAASP,EAA+C,EACxFA,GAAA,YAAAA,EAAc,aAAc,WACzB,KAAA,aAAa,IAAIF,EAAKS,CAAI,CAEnC,CACF,CAEA,MAAeC,EAAA,IAAIX,EC/EZ,MAAMY,CAAe,CAC1B,MAAM,YAA+B,CAClB,OAAA,MAAM,KAAK,cAAA,GAAiB,IAC/C,CAEA,MAAM,eAAyC,CACtC,OAAA,MAAMZ,EAAa,UAAU,oBAAqB,CACvD,aAAc,CACZ,UAAW,SACb,CAAA,CACD,CACH,CACF,CAEA,MAAea,EAAA,IAAID,ECCZ,SAASE,EAAuBC,EAAsD,CACrF,KAAA,CACJ,IAAAC,EACA,IAAAC,EACA,MAAAC,EAAQ,GACR,MAAAC,EACA,OAAAC,EACA,YAAAC,EAAc,CAAC,CAAE,MAAO,qBAAsB,MAAO,QAAU,CAAE,MAAO,MAAO,CAC7E,EAAAN,EACEd,EAAM,IAAI,IAAIe,EAAK,OAAO,SAAS,IAAI,EACvCM,EAAU,SAAS,cAAc,SAAS,EAC1C,CAAE,SAAAC,CAAa,EAAAtB,EACfuB,EAAMD,EAAS,UAAUA,EAAS,YAAY,GAAG,EAAI,CAAC,EAGhD,OAAAF,EAAA,QAASI,GAAO,CACpB,MAAAC,EAAS,SAAS,cAAc,QAAQ,EAC1CD,EAAG,OAAcC,EAAA,aAAa,QAASD,EAAG,KAAK,EAC5CC,EAAA,aAAa,OAAQ,YAAY,EACxCA,EAAO,aAAa,SAAU,GAAGH,CAAQ,UAAUE,EAAG,KAAK,gCAAgC,EAC3FH,EAAQ,YAAYI,CAAM,CAAA,CAC3B,EAGWL,EAAA,QAAQ,CAACI,EAAIE,IAAM,CACzB,GAAAA,EAAIN,EAAY,OAAS,EAAG,CACxB,MAAAK,EAAS,SAAS,cAAc,QAAQ,EAC1CD,EAAG,OAAcC,EAAA,aAAa,QAASD,EAAG,KAAK,EAC5CC,EAAA,aAAa,SAAU,GAAGH,CAAQ,UAAUE,EAAG,KAAK,WAAWD,CAAG,kBAAkB,EAC3FF,EAAQ,YAAYI,CAAM,CAAA,KACrB,CACC,MAAAE,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,aAAa,UAAWV,EAAQ,QAAU,MAAM,EAChDU,EAAA,aAAa,MAAOX,CAAG,EACvBW,EAAA,aAAa,QAAST,CAAK,EAC3BS,EAAA,aAAa,SAAUR,CAAM,EACjCE,EAAQ,YAAYM,CAAG,EACnBA,EAAA,aAAa,MAAO,GAAGL,CAAQ,UAAUE,EAAG,KAAK,WAAWD,CAAG,kBAAkB,CACvF,CAAA,CACD,EAEMF,CACT"}