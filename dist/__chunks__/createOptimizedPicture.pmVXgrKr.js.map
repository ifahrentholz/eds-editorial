{"version":3,"file":"createOptimizedPicture.pmVXgrKr.js","sources":["../../src/utils/fetchData.ts","../../src/utils/fetchJson.ts","../../src/services/sitemap.service.ts","../../src/utils/fetchText.ts","../../src/utils/createOptimizedPicture.ts"],"sourcesContent":["//export const fetchData = async (endpoint: string, init?: RequestInit): Promise<Response> => {\n//  // TODO: Add Cache validation, or expiration otherwise its the browser default setting\n//  // Maybe start a Promise without waiting that Makes a fetch and compares the outcome\n//  // but the cached value is returned before the validation so there is no delay\n//  // By different the new response replaces the old one\n//\n//  const decoratedEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n//  const url = `${window.hlx.codeBasePath}${decoratedEndpoint}`;\n//\n//  const request = new Request(url, init);\n//  const cache = await caches.open('fetch-cache');\n//  const cachedResponse = await cache.match(request);\n//\n//  if (cachedResponse) return cachedResponse;\n//\n//  const response = await fetch(request);\n//\n//  if (response.ok) {\n//    await cache.put(request, response.clone());\n//  }\n//\n//  return response;\n//};\n\nconst fetchCache = new Map<string, Response>();\nexport const fetchData = async (endpoint: string, init?: RequestInit): Promise<Response> => {\n  const decoratedEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n  const url = `${window.hlx.codeBasePath}${decoratedEndpoint}`;\n  const request = new Request(url, init);\n\n  if (fetchCache.has(url)) return fetchCache.get(url)!;\n\n  const response = await fetch(request);\n\n  if (response.ok) {\n    fetchCache.set(url, response.clone());\n  }\n\n  return response;\n};\n","import { fetchData } from './fetchData.ts';\n\nexport const fetchJson = async <T>(endpoint: string, init?: RequestInit): Promise<T> => {\n  const response = await fetchData(endpoint, init);\n  return await response.json();\n};\n","import { SheetsResponse, Sitemap } from '../shared.types.ts';\nimport { fetchJson } from '../utils/fetchJson.ts';\n\nexport class SitemapService {\n  private fetchPromise: Promise<SheetsResponse>;\n\n  async getSiteMap(): Promise<Sitemap> {\n    return <Sitemap>(await this.getQueryIndex()).data;\n  }\n\n  async getQueryIndex(): Promise<SheetsResponse> {\n    // Ensures only to start one promise for this fetch request at a time\n    if (this.fetchPromise) return this.fetchPromise;\n    this.fetchPromise = fetchJson<SheetsResponse>('/query-index.json');\n    return this.fetchPromise;\n  }\n}\n\nexport default new SitemapService();\n","import { fetchData } from './fetchData.ts';\n\nexport const fetchText = async (endpoint: string, init?: RequestInit): Promise<string> => {\n  const response = await fetchData(endpoint, init);\n  return response.text();\n};\n","/**\n * Returns a picture element with webp and fallbacks\n * @param {string} src The image URL\n * @param {string} [alt] The image alternative text\n * @param {boolean} [eager] Set loading attribute to eager\n * @param {Array} [breakpoints] Breakpoints and corresponding params (eg. width)\n * @returns {Element} The picture element\n */\n\ninterface CreateOptimizedPictureArgs {\n  src: string;\n  alt: string;\n  width: string;\n  height: string;\n  eager?: boolean;\n  breakpoints?: Array<Record<string, string>>;\n}\n\nexport function createOptimizedPicture(args: CreateOptimizedPictureArgs): HTMLPictureElement {\n  const {\n    src,\n    alt,\n    eager = false,\n    width,\n    height,\n    breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }],\n  } = args;\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      img.setAttribute('width', width);\n      img.setAttribute('height', height);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}\n"],"names":["fetchCache","fetchData","endpoint","init","decoratedEndpoint","url","request","response","fetchJson","SitemapService","SitemapService$1","fetchText","createOptimizedPicture","args","src","alt","eager","width","height","breakpoints","picture","pathname","ext","br","source","i","img"],"mappings":"AAwBA,MAAMA,MAAiB,IACVC,EAAY,MAAOC,EAAkBC,IAA0C,CAC1F,MAAMC,EAAoBF,EAAS,WAAW,GAAG,EAAIA,EAAW,IAAIA,CAAQ,GACtEG,EAAM,GAAG,OAAO,IAAI,YAAY,GAAGD,CAAiB,GACpDE,EAAU,IAAI,QAAQD,EAAKF,CAAI,EAEjC,GAAAH,EAAW,IAAIK,CAAG,EAAU,OAAAL,EAAW,IAAIK,CAAG,EAE5C,MAAAE,EAAW,MAAM,MAAMD,CAAO,EAEpC,OAAIC,EAAS,IACXP,EAAW,IAAIK,EAAKE,EAAS,MAAO,CAAA,EAG/BA,CACT,ECrCaC,EAAY,MAAUN,EAAkBC,IAE5C,MADU,MAAMF,EAAUC,EAAUC,CAAI,GACzB,OCDjB,MAAMM,CAAe,CAG1B,MAAM,YAA+B,CAClB,OAAA,MAAM,KAAK,cAAA,GAAiB,IAC/C,CAEA,MAAM,eAAyC,CAE7C,OAAI,KAAK,aAAqB,KAAK,cAC9B,KAAA,aAAeD,EAA0B,mBAAmB,EAC1D,KAAK,aACd,CACF,CAEA,MAAeE,EAAA,IAAID,EChBNE,EAAY,MAAOT,EAAkBC,KAC/B,MAAMF,EAAUC,EAAUC,CAAI,GAC/B,OCcX,SAASS,EAAuBC,EAAsD,CACrF,KAAA,CACJ,IAAAC,EACA,IAAAC,EACA,MAAAC,EAAQ,GACR,MAAAC,EACA,OAAAC,EACA,YAAAC,EAAc,CAAC,CAAE,MAAO,qBAAsB,MAAO,QAAU,CAAE,MAAO,MAAO,CAC7E,EAAAN,EACER,EAAM,IAAI,IAAIS,EAAK,OAAO,SAAS,IAAI,EACvCM,EAAU,SAAS,cAAc,SAAS,EAC1C,CAAE,SAAAC,CAAa,EAAAhB,EACfiB,EAAMD,EAAS,UAAUA,EAAS,YAAY,GAAG,EAAI,CAAC,EAGhD,OAAAF,EAAA,QAASI,GAAO,CACpB,MAAAC,EAAS,SAAS,cAAc,QAAQ,EAC1CD,EAAG,OAAcC,EAAA,aAAa,QAASD,EAAG,KAAK,EAC5CC,EAAA,aAAa,OAAQ,YAAY,EACxCA,EAAO,aAAa,SAAU,GAAGH,CAAQ,UAAUE,EAAG,KAAK,gCAAgC,EAC3FH,EAAQ,YAAYI,CAAM,CAAA,CAC3B,EAGWL,EAAA,QAAQ,CAACI,EAAIE,IAAM,CACzB,GAAAA,EAAIN,EAAY,OAAS,EAAG,CACxB,MAAAK,EAAS,SAAS,cAAc,QAAQ,EAC1CD,EAAG,OAAcC,EAAA,aAAa,QAASD,EAAG,KAAK,EAC5CC,EAAA,aAAa,SAAU,GAAGH,CAAQ,UAAUE,EAAG,KAAK,WAAWD,CAAG,kBAAkB,EAC3FF,EAAQ,YAAYI,CAAM,CAAA,KACrB,CACC,MAAAE,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,aAAa,UAAWV,EAAQ,QAAU,MAAM,EAChDU,EAAA,aAAa,MAAOX,CAAG,EACvBW,EAAA,aAAa,QAAST,CAAK,EAC3BS,EAAA,aAAa,SAAUR,CAAM,EACjCE,EAAQ,YAAYM,CAAG,EACnBA,EAAA,aAAa,MAAO,GAAGL,CAAQ,UAAUE,EAAG,KAAK,WAAWD,CAAG,kBAAkB,CACvF,CAAA,CACD,EAEMF,CACT"}