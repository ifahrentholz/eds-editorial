class l{constructor(){this.runtimeCache=new Map}get(e){return this.runtimeCache.get(e)}set(e,t){this.runtimeCache.set(e,t)}has(e){return this.runtimeCache.has(e)}delete(e){this.runtimeCache.delete(e)}}class w{constructor(){this.requestPipeline=new Map,this.runtimeCache=new l}fetchJson(e,t={}){return this.fetchData(e,t,this.getResponseJSON)}fetchText(e,t={}){return this.fetchData(e,t,this.getResponseText)}async fetchData(e,t,s){const{cacheOptions:u}=t,d=this.getCachedData(e,u);if(d!==null)return d;const r=this.requestPipeline.get(e);if(r!==void 0)return s(await r);const m=fetch(e,t.fetchOptions);this.requestPipeline.set(e,m);const c=await m;this.requestPipeline.delete(e);const n=await s(c);return this.setCachedData(e,n,u),n}async getResponseJSON(e){return await e.clone().json()}async getResponseText(e){return await e.clone().text()}getCachedData(e,t){return(t==null?void 0:t.cacheType)==="runtime"?this.runtimeCache.get(e)??null:null}setCachedData(e,t,s){(s==null?void 0:s.cacheType)==="runtime"&&this.runtimeCache.set(e,t)}}const f=new w;class g{async getSiteMap(){return(await this.getQueryIndex()).data}async getQueryIndex(){return await f.fetchJson("/query-index.json",{cacheOptions:{cacheType:"runtime"}})}}const C=new g;function y(h){const{src:e,alt:t,eager:s=!1,width:u,height:d,breakpoints:r=[{media:"(min-width: 600px)",width:"2000"},{width:"750"}]}=h,m=new URL(e,window.location.href),c=document.createElement("picture"),{pathname:n}=m,p=n.substring(n.lastIndexOf(".")+1);return r.forEach(a=>{const o=document.createElement("source");a.media&&o.setAttribute("media",a.media),o.setAttribute("type","image/webp"),o.setAttribute("srcset",`${n}?width=${a.width}&format=webply&optimize=medium`),c.appendChild(o)}),r.forEach((a,o)=>{if(o<r.length-1){const i=document.createElement("source");a.media&&i.setAttribute("media",a.media),i.setAttribute("srcset",`${n}?width=${a.width}&format=${p}&optimize=medium`),c.appendChild(i)}else{const i=document.createElement("img");i.setAttribute("loading",s?"eager":"lazy"),i.setAttribute("alt",t),i.setAttribute("width",u),i.setAttribute("height",d),c.appendChild(i),i.setAttribute("src",`${n}?width=${a.width}&format=${p}&optimize=medium`)}}),c}export{f as F,C as S,g as a,y as c};
//# sourceMappingURL=createOptimizedPicture.mLL2HDam.js.map
