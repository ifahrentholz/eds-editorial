class w{constructor(){this.responseMap=new Map,this.responsePromiseMap=new Map}async fetchData(e,s){const a=e.startsWith("/")?e:`/${e}`,i=`${window.hlx.codeBasePath}${a}`;if(this.responseMap.has(i))return this.responseMap.get(i);const c=await this.fetch(i,s);return c.ok&&this.responseMap.set(i,c.clone()),c}async fetchJson(e,s){return await(await this.fetchData(e,s)).json()}async fetchText(e,s){return(await this.fetchData(e,s)).text()}fetch(e,s){if(this.responsePromiseMap.has(e))return this.responsePromiseMap.get(e);const a=new Request(e,s),i=fetch(a);return this.responsePromiseMap.set(e,i),this.responsePromiseMap.get(e)}}const f=new w;class l{async getSiteMap(){return(await this.getQueryIndex()).data}getQueryIndex(){return f.fetchJson("/query-index.json")}}const g=new l;function M(p){const{src:e,alt:s,eager:a=!1,width:i,height:c,breakpoints:u=[{media:"(min-width: 600px)",width:"2000"},{width:"750"}]}=p,d=new URL(e,window.location.href),h=document.createElement("picture"),{pathname:o}=d,m=o.substring(o.lastIndexOf(".")+1);return u.forEach(r=>{const n=document.createElement("source");r.media&&n.setAttribute("media",r.media),n.setAttribute("type","image/webp"),n.setAttribute("srcset",`${o}?width=${r.width}&format=webply&optimize=medium`),h.appendChild(n)}),u.forEach((r,n)=>{if(n<u.length-1){const t=document.createElement("source");r.media&&t.setAttribute("media",r.media),t.setAttribute("srcset",`${o}?width=${r.width}&format=${m}&optimize=medium`),h.appendChild(t)}else{const t=document.createElement("img");t.setAttribute("loading",a?"eager":"lazy"),t.setAttribute("alt",s),t.setAttribute("width",i),t.setAttribute("height",c),h.appendChild(t),t.setAttribute("src",`${o}?width=${r.width}&format=${m}&optimize=medium`)}}),h}export{g as S,M as c,f};
//# sourceMappingURL=createOptimizedPicture.1hpLZdQW.js.map
