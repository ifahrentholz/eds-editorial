import{j as y,x as s}from"../__chunks__/lit-element.XkUWx5ik.js";const u=(e,t)=>s`<table><thead><tr>${e.map(a=>s`<th>${a}</th>`)}</tr></thead><tbody>${t.map(a=>s`<tr>${a.map(l=>s`<td>${l}</td>`)}</tr>`)}</tbody></table>`,b=e=>e.map(t=>u(t.headers,t.data));async function q(e){e.innerHTML="";try{const t=await fetch(`${window.hlx.codeBasePath}/query-index.json`);if(!t.ok)throw new Error("Failed to fetch data");const l=(await t.json()).data.filter(o=>o.path.includes("/generic")),d=await Promise.all(l.map(async o=>{const c=await fetch(`${window.hlx.codeBasePath}${o.path}.plain.html`);if(!c.ok)throw new Error(`Failed to fetch data for ${o.path}`);const h=await c.text(),p=new DOMParser().parseFromString(h,"text/html"),n=Array.from(p.querySelectorAll(".table div")),m=Array.from(n[0].querySelectorAll("div")).map(r=>r.innerText),i=[];for(let r=1;r<n.length;r++){const w=Array.from(n[r].querySelectorAll("div")).map(f=>f.innerText);console.log(n[r]),i.push(w)}return{headers:m,data:i}}));e.style.removeProperty("display"),y(b(d),e)}catch(t){console.error("Error rendering tables:",t)}}export{q as default};
//# sourceMappingURL=table.js.map
