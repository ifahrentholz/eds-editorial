{"version":3,"file":"form.js","sources":["../../src/blocks/form/form-fields.ts","../../src/blocks/form/form.ts"],"sourcesContent":["import { toClassName } from '../../utils/toClassName';\n\nexport interface FormField {\n  name: string;\n  type: any;\n  label: string;\n  placeholder: string;\n  options: string[];\n  value?: string;\n  required: boolean;\n  id: string;\n  fieldset: string;\n  rows: number;\n  class: string;\n}\n\nconst ids = [];\nconst generateFieldId = (field: FormField, suffix = '') => {\n  const slug = toClassName(`form-${field.name}${suffix}`);\n  ids[slug] = ids[slug] || 0;\n  const idSuffix = ids[slug] ? `-${ids[slug]}` : '';\n  ids[slug] += 1;\n  return `${slug}${idSuffix}`;\n};\n\nconst setCommonAttributes = (fieldElement, field: FormField) => {\n  if (field.id) fieldElement.id = field.id;\n  if (field.name) fieldElement.name = field.name;\n  if (field.required) fieldElement.required = field.required;\n  if (field.placeholder) fieldElement.placeholder = field.placeholder;\n  if (field.value) fieldElement.value = field.value;\n};\n\nconst renderFieldWrapper = (field: FormField) => {\n  const fieldWrapper = document.createElement('div');\n  if (field.class) fieldWrapper.className = field.class;\n  if (field.fieldset) fieldWrapper.dataset.fieldset = field.fieldset;\n  return fieldWrapper;\n};\n\nconst renderFieldset = (field: FormField) => {\n  const fieldElement = document.createElement('fieldset');\n  fieldElement.className = 'row gtr-uniform';\n  setCommonAttributes(fieldElement, field);\n\n  if (field.label) {\n    const legend = document.createElement('legend');\n    legend.textContent = field.label;\n    fieldElement.append(legend);\n  }\n\n  const fieldWrapper = renderFieldWrapper(field);\n  fieldWrapper.append(fieldElement);\n\n  return { fieldElement, fieldWrapper };\n};\n\nconst renderHeading = (field: FormField) => {\n  const fieldWrapper = renderFieldWrapper(field);\n  const level = field.class && field.class.includes('sub-heading') ? 3 : 2;\n  const heading = document.createElement(`h${level}`);\n  heading.textContent = field.value || field.label;\n  heading.id = field.id;\n  fieldWrapper.append(heading);\n  return { fieldElement: heading, fieldWrapper };\n};\n\nconst renderLabel = (field: FormField) => {\n  const label = document.createElement('label');\n  label.id = generateFieldId(field, '-label');\n  label.textContent = field.label || field.name;\n  label.setAttribute('for', field.id);\n  return label;\n};\n\nconst renderPlaintext = (field: FormField) => {\n  const fieldWrapper = renderFieldWrapper(field);\n  const text = document.createElement('p');\n  text.textContent = field.value || field.label;\n  text.id = field.id;\n  fieldWrapper.append(text);\n  return { fieldElement: text, fieldWrapper };\n};\n\nconst renderInputField = (field: FormField, hasLabelOnTop = true) => {\n  const fieldElement = document.createElement('input');\n  fieldElement.type = field.type;\n  setCommonAttributes(fieldElement, field);\n\n  const fieldWrapper = renderFieldWrapper(field);\n  const label = renderLabel(field);\n  fieldElement.setAttribute('aria-labelledby', label.id);\n\n  if (hasLabelOnTop) {\n    fieldWrapper.append(label);\n    fieldWrapper.append(fieldElement);\n  } else {\n    fieldWrapper.append(fieldElement);\n    fieldWrapper.append(label);\n  }\n\n  return { fieldElement, fieldWrapper };\n};\n\nconst renderTextareaField = (field: FormField) => {\n  const fieldElement = document.createElement('textarea');\n  setCommonAttributes(fieldElement, field);\n\n  const fieldWrapper = renderFieldWrapper(field);\n  const label = renderLabel(field);\n  fieldElement.setAttribute('aria-labelledby', label.id);\n  fieldWrapper.append(label);\n  fieldWrapper.append(fieldElement);\n\n  return { fieldElement, fieldWrapper };\n};\n\nconst renderCheckboxField = (field: FormField) => {\n  const { fieldElement, fieldWrapper } = renderInputField(field, false);\n  if (!field.value) fieldElement.value = 'checked';\n  return { fieldElement, fieldWrapper };\n};\n\nconst renderSelectField = (field: FormField) => {\n  const select = document.createElement('select');\n  setCommonAttributes(select, field);\n  const addOption = ({ text, value }) => {\n    const option = document.createElement('option');\n    option.text = text.trim();\n    option.value = value.trim();\n    if (option.value === select.value) {\n      option.setAttribute('selected', '');\n    }\n    select.add(option);\n    return option;\n  };\n\n  if (field.placeholder) {\n    const placeholder = addOption({ text: field.placeholder, value: '' });\n    placeholder.setAttribute('disabled', '');\n  }\n\n  if (field.options) {\n    const options = field.options.map((opt) => ({\n      text: opt.trim(),\n      value: opt.trim().toLowerCase(),\n    }));\n\n    options.forEach((opt) => addOption(opt));\n  }\n\n  const fieldWrapper = renderFieldWrapper(field);\n  fieldWrapper.append(renderLabel(field));\n  fieldWrapper.append(select);\n\n  return { fieldElement: select, fieldWrapper };\n};\n\nconst renderRadioField = (field: FormField) => {\n  const { fieldElement, fieldWrapper } = renderInputField(field, false);\n  if (!field.value) fieldElement.value = field.label || 'on';\n  return { fieldElement, fieldWrapper };\n};\n\nconst renderToggleField = (field: FormField) => {\n  const { fieldElement, fieldWrapper } = renderInputField(field, false);\n  fieldElement.type = 'checkbox';\n  if (!field.value) fieldElement.value = 'on';\n  fieldElement.classList.add('toggle');\n\n  const toggleSwitch = document.createElement('div');\n  toggleSwitch.classList.add('toggle-switch');\n  toggleSwitch.append(fieldElement);\n  fieldWrapper.append(toggleSwitch);\n\n  const slider = document.createElement('span');\n  slider.classList.add('toggle-slider');\n  toggleSwitch.append(slider);\n  slider.addEventListener('click', () => {\n    fieldElement.checked = !fieldElement.checked;\n  });\n\n  return { fieldElement, fieldWrapper };\n};\n\nconst renderButtonField = (field: FormField) => {\n  const button = document.createElement('button');\n  button.textContent = field.label || field.name;\n  button.classList.add(field.class);\n  button.type = field.type;\n\n  const fieldWrapper = renderFieldWrapper(field);\n  fieldWrapper.append(button);\n  return { field: button, fieldWrapper };\n};\n\nconst FIELD_RENDERER_FUNCTIONS = {\n  headline: renderHeading,\n  plaintext: renderPlaintext,\n  text: renderInputField,\n  textarea: renderTextareaField,\n  checkbox: renderCheckboxField,\n  select: renderSelectField,\n  radio: renderRadioField,\n  toggle: renderToggleField,\n  button: renderButtonField,\n  fieldset: renderFieldset,\n  submit: renderButtonField,\n};\n\nexport const renderField = (field: FormField) => {\n  field.id = field.id || generateFieldId(field);\n  const type = field.type.toLowerCase();\n  const renderFieldFunc = FIELD_RENDERER_FUNCTIONS[type] || renderInputField;\n  const fieldElements = renderFieldFunc(field);\n\n  return fieldElements.fieldWrapper;\n};\n","import { html, nothing, render } from 'lit';\nimport { fetchJson } from '../../utils/fetch';\nimport { SheetsResponse } from '../../shared.types';\nimport { renderField, FormField } from '../form/form-fields';\n\nconst parseFieldData = (item: any): FormField => {\n  return {\n    name: item.name,\n    type: item.type,\n    label: item.label || undefined,\n    placeholder: item.placeholder,\n    options: item.options ? item.options.split(',').map((option: string) => option.trim()) : undefined,\n    value: item.value || undefined,\n    required: item.required && (item.required.toLowerCase() === 'true' || item.required.toLowerCase() === 'x'),\n    id: item.id || undefined,\n    fieldset: item.fieldset || undefined,\n    rows: item.rows || undefined,\n    class: item.class,\n  };\n};\n\nconst fetchFormData = async (pathname) => {\n  const data: SheetsResponse = await fetchJson(pathname);\n  const detailsData = data.data.map((item: any) => parseFieldData(item));\n  return detailsData;\n};\n\nconst template = (templateArgs: FormField[]) => {\n  if (!templateArgs) return nothing;\n\n  return html`\n    <div style=\"padding: 35px\">\n      <form method=\"post\">\n        <div class=\"row gtr-uniform\">${templateArgs.map((element) => html`${renderField(element)}`)}</div>\n      </form>\n    </div>\n  `;\n};\n\nfunction generatePayload(form) {\n  const payload = {};\n\n  [...form.elements].forEach((field) => {\n    if (field.name && field.type !== 'submit' && !field.disabled) {\n      if (field.type === 'radio') {\n        if (field.checked) payload[field.name] = field.value;\n      } else if (field.type === 'checkbox') {\n        if (field.checked)\n          payload[field.name] = payload[field.name] ? `${payload[field.name]},${field.value}` : field.value;\n      } else {\n        payload[field.name] = field.value;\n      }\n    }\n  });\n  return payload;\n}\n\nfunction handleSubmitError(form, error) {\n  // eslint-disable-next-line no-console\n  console.error(error);\n  form.querySelector('button[type=\"submit\"]').disabled = false;\n}\n\nasync function handleSubmit(form) {\n  if (form.getAttribute('data-submitting') === 'true') return;\n\n  const submit = form.querySelector('button[type=\"submit\"]');\n  try {\n    form.setAttribute('data-submitting', 'true');\n    submit.disabled = true;\n\n    // create payload\n    const payload = generatePayload(form);\n    const response = await fetch(form.dataset.action, {\n      method: 'POST',\n      body: JSON.stringify({ data: payload }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    if (response.ok) {\n      console.log(payload);\n      if (form.dataset.confirmation) {\n        window.location.href = form.dataset.confirmation;\n      }\n    } else {\n      const error = await response.text();\n      throw new Error(error);\n    }\n  } catch (e) {\n    handleSubmitError(form, e);\n  } finally {\n    form.setAttribute('data-submitting', 'false');\n    form.reset();\n    submit.disabled = false;\n  }\n}\n\nexport default async function decorate(block: HTMLElement) {\n  const formLink = block.querySelector<HTMLElement>('a[href$=\".json\"]')?.innerText;\n  if (!formLink) return;\n\n  const { pathname } = new URL(formLink);\n  const formData = await fetchFormData(pathname);\n\n  block.innerHTML = '';\n  block.style.removeProperty('display');\n  render(template(formData), block);\n\n  const form = block.querySelector('form');\n  if (form) {\n    // group fields into fieldsets\n    const fieldsets = form.querySelectorAll('fieldset');\n    fieldsets.forEach((fieldset) => {\n      form.querySelectorAll(`[data-fieldset=\"${fieldset.name}\"`).forEach((field) => {\n        fieldset.append(field);\n      });\n    });\n\n    form.dataset.action = pathname.split('.json')[0];\n    form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      const valid = form.checkValidity();\n      if (valid) {\n        handleSubmit(form);\n      } else {\n        const firstInvalidEl = form.querySelector<HTMLElement>(':invalid:not(fieldset)');\n        if (firstInvalidEl) {\n          firstInvalidEl.focus();\n          firstInvalidEl.scrollIntoView({ behavior: 'smooth' });\n        }\n      }\n    });\n  }\n}\n"],"names":["ids","generateFieldId","field","suffix","slug","toClassName","idSuffix","setCommonAttributes","fieldElement","renderFieldWrapper","fieldWrapper","renderFieldset","legend","renderHeading","level","heading","renderLabel","label","renderPlaintext","text","renderInputField","hasLabelOnTop","renderTextareaField","renderCheckboxField","renderSelectField","select","addOption","value","option","opt","renderRadioField","renderToggleField","toggleSwitch","slider","renderButtonField","button","FIELD_RENDERER_FUNCTIONS","renderField","type","parseFieldData","item","fetchFormData","pathname","fetchJson","template","templateArgs","html","element","nothing","generatePayload","form","payload","handleSubmitError","error","handleSubmit","submit","response","e","decorate","block","formLink","_a","formData","render","fieldset","firstInvalidEl"],"mappings":"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"}