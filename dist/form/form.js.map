{"version":3,"file":"form.js","sources":["../../src/blocks/form/form-fields.ts","../../src/blocks/form/form.ts"],"sourcesContent":["import { html } from 'lit';\n\nexport interface FormField {\n  name: string;\n  type: any;\n  placeholder: string;\n  label: string;\n  id: string;\n  class: string;\n  rows?: number;\n  options?: string[];\n}\n\nconst renderInputField = (field: FormField) => {\n  return html`\n    <input\n      type=\"${field.type}\"\n      name=\"${field.name}\"\n      id=\"${field.id}\"\n      class=\"${field.class}\"\n      placeholder=\"${field.placeholder}\"\n    />\n  `;\n};\n\nconst renderButtonField = (field: FormField) => {\n  return html` <button type=\"${field.type}\" class=\"${field.class}\" id=\"${field.id}\">${field.label}</button> `;\n};\n\nconst renderTextareaField = (field: FormField) => {\n  return html`\n    <textarea\n      name=\"${field.name}\"\n      id=\"${field.id}\"\n      class=\"${field.class}\"\n      placeholder=\"${field.placeholder}\"\n      rows=\"${field.rows || 3}\"\n    ></textarea>\n  `;\n};\n\nconst renderSubmitField = (field: FormField) => {\n  return html`\n    <button type=\"submit\" class=\"${field.class}\" id=\"${field.id}\">${field.label ? field.label : field.name}</button>\n  `;\n};\n\nconst renderSelectField = (field: FormField) => {\n  return html`\n    <select name=\"${field.name}\" id=\"${field.id}\" class=\"${field.class}\">\n      ${field.options?.map((option) => html`<option>${option}</option>`)}\n    </select>\n  `;\n};\n\nexport const renderField = (field: FormField) => {\n  const fieldRenderers = {\n    text: renderInputField,\n    textarea: renderTextareaField,\n    select: renderSelectField,\n    button: renderButtonField,\n    submit: renderSubmitField,\n  };\n\n  const renderer = fieldRenderers[field.type] || renderInputField;\n  return renderer.call(this, field);\n};\n","import { html, nothing, render } from 'lit';\nimport { fetchJson } from '../../utils/fetch';\nimport { SheetsResponse } from '../../shared.types';\nimport { renderField, FormField } from '../form/form-fields';\n\nconst parseFieldData = (item: any): FormField => {\n  return {\n    name: item.name,\n    type: item.type,\n    placeholder: item.placeholder,\n    label: item.label,\n    id: item.id,\n    class: item.class,\n    rows: item.rows || undefined,\n    options: item.options ? item.options.split(',').map((option: string) => option.trim()) : undefined,\n  };\n};\n\nconst fetchFormData = async (pathname) => {\n  const data: SheetsResponse = await fetchJson(pathname);\n  const detailsData = data.data.map((item: any) => parseFieldData(item));\n  return detailsData;\n};\n\nconst template = (templateArgs: FormField[]) => {\n  if (!templateArgs) return nothing;\n\n  return html`\n    <div style=\"padding: 35px\">\n      <h2>Form</h2>\n      <form method=\"post\">\n        <div class=\"row gtr-uniform\">\n          ${templateArgs.map(\n            (element) => html`\n              <div class=\"${element.class}\">\n                ${renderField(element)}\n                <label for=\"${element.id}\">${element.label}</label>\n              </div>\n            `\n          )}\n        </div>\n      </form>\n    </div>\n  `;\n};\n\nfunction generatePayload(form) {\n  const payload = {};\n\n  [...form.elements].forEach((field) => {\n    if (field.name && field.type !== 'submit' && !field.disabled) {\n      if (field.type === 'radio') {\n        if (field.checked) payload[field.name] = field.value;\n      } else if (field.type === 'checkbox') {\n        if (field.checked)\n          payload[field.name] = payload[field.name] ? `${payload[field.name]},${field.value}` : field.value;\n      } else {\n        payload[field.name] = field.value;\n      }\n    }\n  });\n  return payload;\n}\n\nfunction handleSubmitError(form, error) {\n  // eslint-disable-next-line no-console\n  console.error(error);\n  form.querySelector('button[type=\"submit\"]').disabled = false;\n}\n\nasync function handleSubmit(form) {\n  if (form.getAttribute('data-submitting') === 'true') return;\n\n  const submit = form.querySelector('button[type=\"submit\"]');\n  try {\n    form.setAttribute('data-submitting', 'true');\n    submit.disabled = true;\n\n    // create payload\n    const payload = generatePayload(form);\n    const response = await fetch(form.dataset.action, {\n      method: 'POST',\n      body: JSON.stringify({ data: payload }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    if (response.ok) {\n      console.log(payload);\n      if (form.dataset.confirmation) {\n        window.location.href = form.dataset.confirmation;\n      }\n    } else {\n      const error = await response.text();\n      throw new Error(error);\n    }\n  } catch (e) {\n    handleSubmitError(form, e);\n  } finally {\n    form.setAttribute('data-submitting', 'false');\n    form.reset.click();\n    submit.disabled = false;\n  }\n}\n\nexport default async function decorate(block: HTMLElement) {\n  const formLink = block.querySelector<HTMLElement>('a[href$=\".json\"]')?.innerText;\n  if (!formLink) return;\n\n  const { pathname } = new URL(formLink);\n  const formData = await fetchFormData(pathname);\n\n  block.innerHTML = '';\n  block.style.removeProperty('display');\n  render(template(formData), block);\n\n  const form = block.querySelector('form');\n\n  if (form) {\n    form.dataset.action = pathname.split('.json')[0];\n    form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      const valid = form.checkValidity();\n      if (valid) {\n        handleSubmit(form);\n      } else {\n        const firstInvalidEl = form.querySelector<HTMLElement>(':invalid:not(fieldset)');\n        if (firstInvalidEl) {\n          firstInvalidEl.focus();\n          firstInvalidEl.scrollIntoView({ behavior: 'smooth' });\n        }\n      }\n    });\n  }\n}\n"],"names":["renderInputField","field","html","renderButtonField","renderTextareaField","renderSubmitField","renderSelectField","_a","option","renderField","parseFieldData","item","fetchFormData","pathname","fetchJson","template","templateArgs","element","nothing","generatePayload","form","payload","handleSubmitError","error","handleSubmit","submit","response","decorate","block","formLink","formData","render","e","firstInvalidEl"],"mappings":"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"}