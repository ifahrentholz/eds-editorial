{"version":3,"file":"form.js","sources":["../../src/blocks/form/form-fields.ts","../../src/blocks/form/form.ts"],"sourcesContent":["import { html, nothing } from 'lit';\nimport { toClassName } from '../../utils/toClassName';\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\n\nexport interface FormField {\n  name: string;\n  type:\n    | 'headline'\n    | 'plaintext'\n    | 'text'\n    | 'button'\n    | 'fieldset'\n    | 'select'\n    | 'toggle'\n    | 'radio'\n    | 'checkbox'\n    | 'textarea'\n    | 'reset'\n    | 'submit';\n  label: string;\n  placeholder: string;\n  options: string[];\n  value?: string;\n  required?: boolean;\n  id: string;\n  fieldset?: string;\n  class: string;\n}\n\nconst ids = [];\nconst generateFieldId = (field: FormField, suffix = '') => {\n  const slug = toClassName(`form-${field.name}${suffix}`);\n  ids[slug] = ids[slug] || 0;\n  const idSuffix = ids[slug] ? `-${ids[slug]}` : '';\n  ids[slug] += 1;\n  return `${slug}${idSuffix}`;\n};\n\nconst renderLegend = (legend: string) => {\n  return html` <legend>${legend}</legend> `;\n};\n\nconst renderFieldset = (field: FormField) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      <fieldset\n        class=\"row gtr-uniform\"\n        id=\"${ifDefined(field.id)}\"\n        name=\"${ifDefined(field.name)}\"\n        placeholder=\"${ifDefined(field.placeholder)}\"\n        value=\"${ifDefined(field.value)}\"\n        required=\"${ifDefined(field.required)}\"\n      >\n        ${field.label ? renderLegend(field.label) : nothing}\n      </fieldset>\n    </div>\n  `;\n};\n\nconst renderHeading = (field: FormField) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      ${field.class && field.class.includes('sub-heading')\n        ? html`<h3 id=\"${ifDefined(field.id)}\">${field.value || field.label}</h3>`\n        : html`<h2 id=\"${ifDefined(field.id)}\">${field.value || field.label}</h2>`}\n    </div>\n  `;\n};\n\nconst renderLabel = (id: string, field: FormField) => {\n  return html` <label id=\"${id}\" for=\"${field.id}\"> ${field.label || field.name} </label> `;\n};\n\nconst renderPlaintext = (field: FormField) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      <p id=\"${ifDefined(field.id)}\">${field.value || field.label}</p>\n    </div>\n  `;\n};\n\nconst renderInputField = (field: FormField, hasLabelOnTop = true) => {\n  const labelId = generateFieldId(field, '-label');\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      ${hasLabelOnTop ? renderLabel(labelId, field) : nothing}\n      <input\n        id=\"${ifDefined(field.id)}\"\n        name=\"${ifDefined(field.name)}\"\n        placeholder=\"${ifDefined(field.placeholder)}\"\n        value=\"${ifDefined(field.value)}\"\n        required=\"${ifDefined(field.required)}\"\n        type=\"${ifDefined(field.type)}\"\n        aria-labelledby=\"${labelId}\"\n      />\n      ${!hasLabelOnTop ? renderLabel(labelId, field) : nothing}\n    </div>\n  `;\n};\n\nconst renderTextareaField = (field: FormField) => {\n  const labelId = generateFieldId(field, '-label');\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      ${field.label ? renderLabel(labelId, field) : nothing}\n      <textarea\n        id=\"${ifDefined(field.id)}\"\n        name=\"${ifDefined(field.name)}\"\n        placeholder=\"${ifDefined(field.placeholder)}\"\n        value=\"${ifDefined(field.value)}\"\n        required=\"${ifDefined(field.required)}\"\n        aria-labelledby=\"${labelId}\"\n      ></textarea>\n    </div>\n  `;\n};\n\nconst renderCheckboxField = (field: FormField) => {\n  if (!field.value) field.value = 'checked';\n  return renderInputField(field, false);\n};\n\nconst renderSelectFieldOption = (option: string, selectValue) => {\n  const text = option.trim();\n  const value = option.trim().toLowerCase() ?? '';\n  const selected = value === selectValue ? '' : undefined;\n  return html`<option selected=\"${ifDefined(selected)}\" value=\"${value}\">${text}</option>`;\n};\n\nconst renderSelectField = (field: FormField) => {\n  const labelId = generateFieldId(field, '-label');\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      ${field.label ? renderLabel(labelId, field) : nothing}\n      <select\n        id=\"${ifDefined(field.id)}\"\n        name=\"${ifDefined(field.name)}\"\n        placeholder=\"${ifDefined(field.placeholder)}\"\n        value=\"${ifDefined(field.value)}\"\n        required=\"${ifDefined(field.required)}\"\n      >\n        ${field.options.map((option) => renderSelectFieldOption(option, field.value))}\n      </select>\n    </div>\n  `;\n};\n\nconst renderRadioField = (field: FormField) => {\n  if (!field.value) field.value = field.label || 'on';\n  return renderInputField(field, false);\n};\n\nconst renderButtonField = (field: FormField) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      <button class=\"${ifDefined(field.class)}\" type=\"${ifDefined(field.type)}\">${field.label || field.name}</button>\n    </div>\n  `;\n};\n\nconst renderResetField = (field: FormField) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      <input\n        id=\"${ifDefined(field.id)}\"\n        name=\"${ifDefined(field.name)}\"\n        placeholder=\"${ifDefined(field.placeholder)}\"\n        value=\"${ifDefined(field.value)}\"\n        required=\"${ifDefined(field.required)}\"\n        type=\"reset\"\n      />\n    </div>\n  `;\n};\n\nconst FIELD_RENDERER_FUNCTIONS = {\n  headline: renderHeading,\n  plaintext: renderPlaintext,\n  text: renderInputField,\n  textarea: renderTextareaField,\n  checkbox: renderCheckboxField,\n  select: renderSelectField,\n  radio: renderRadioField,\n  button: renderButtonField,\n  fieldset: renderFieldset,\n  reset: renderResetField,\n  submit: renderButtonField,\n};\n\nexport const renderField = (field: FormField) => {\n  field.id = field.id || generateFieldId(field);\n  const type = field.type.toLowerCase();\n  const renderFieldFunc = FIELD_RENDERER_FUNCTIONS[type] || renderInputField;\n  const fieldElements = renderFieldFunc(field);\n\n  return fieldElements;\n};\n","import { html, nothing, render } from 'lit';\nimport FetchService from '../../services/fetch.service.ts';\nimport { renderField, FormField } from '../form/form-fields';\n\ntype FormElement = {\n  name: string;\n  type:\n    | 'headline'\n    | 'plaintext'\n    | 'text'\n    | 'button'\n    | 'fieldset'\n    | 'select'\n    | 'toggle'\n    | 'radio'\n    | 'checkbox'\n    | 'textarea'\n    | 'reset'\n    | 'submit';\n  label: string;\n  placeholder: string;\n  options: string;\n  value: string;\n  required: string;\n  id: string;\n  fieldset: string;\n  class: string;\n};\n\ninterface SheetsResponse {\n  type: string;\n  data: FormElement[];\n  offset: number;\n  total: number;\n}\n\nconst parseFieldData = (item: FormElement): FormField => {\n  return {\n    name: item.name,\n    type: item.type,\n    label: item.label || '',\n    placeholder: item.placeholder,\n    options: item.options ? item.options.split(',').map((option: string) => option.trim()) : [],\n    value: item.value || undefined,\n    required:\n      item.required !== undefined && (item.required.toLowerCase() === 'true' || item.required.toLowerCase() === 'x'),\n    id: item.id || '',\n    fieldset: item.fieldset || undefined,\n    class: item.class,\n  };\n};\n\nconst fetchFormData = async (pathname: string) => {\n  const data: SheetsResponse = await FetchService.fetchJson(pathname);\n  const detailsData = data.data.map((item: FormElement) => parseFieldData(item));\n  return detailsData;\n};\n\nconst template = (templateArgs: FormField[]) => {\n  if (!templateArgs) return nothing;\n\n  return html`\n    <div>\n      <form method=\"post\">\n        <div class=\"row gtr-uniform\">${templateArgs.map((element) => html`${renderField(element)}`)}</div>\n      </form>\n    </div>\n  `;\n};\n\nfunction generatePayload(form) {\n  const payload = {};\n\n  [...form.elements].forEach((field) => {\n    if (field.name && field.type !== 'submit' && !field.disabled) {\n      if (field.type === 'radio') {\n        if (field.checked) payload[field.name] = field.value;\n      } else if (field.type === 'checkbox') {\n        if (field.checked)\n          payload[field.name] = payload[field.name] ? `${payload[field.name]},${field.value}` : field.value;\n      } else {\n        payload[field.name] = field.value;\n      }\n    }\n  });\n  return payload;\n}\n\nfunction handleSubmitError(form, error) {\n  // eslint-disable-next-line no-console\n  console.error(error);\n  form.querySelector('button[type=\"submit\"]').disabled = false;\n}\n\nasync function handleSubmit(form: HTMLFormElement) {\n  if (form.getAttribute('data-submitting') === 'true') return;\n\n  const submit = form.querySelector<HTMLButtonElement>('button[type=\"submit\"]');\n  try {\n    form.setAttribute('data-submitting', 'true');\n    if (submit) submit.disabled = true;\n\n    // create payload\n    const action = form.dataset.action ?? '';\n    const payload = generatePayload(form);\n    const response = await fetch(action, {\n      method: 'POST',\n      body: JSON.stringify({ data: payload }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    if (response.ok) {\n      console.log(payload);\n      if (form.dataset.confirmation) {\n        window.location.href = form.dataset.confirmation;\n      }\n    } else {\n      const error = await response.text();\n      throw new Error(error);\n    }\n  } catch (e) {\n    handleSubmitError(form, e);\n  } finally {\n    form.setAttribute('data-submitting', 'false');\n    form.reset();\n    if (submit) submit.disabled = false;\n  }\n}\n\nexport default async function decorate(block: HTMLElement) {\n  const formLink = block.querySelector<HTMLElement>('a[href$=\".json\"]')?.innerText;\n  if (!formLink) return;\n\n  const { pathname } = new URL(formLink);\n  const formData = await fetchFormData(pathname);\n\n  block.innerHTML = '';\n  block.style.removeProperty('display');\n  render(template(formData), block);\n\n  const form = block.querySelector('form');\n  if (form) {\n    // group fields into fieldsets\n    const fieldsets = form.querySelectorAll('fieldset');\n    fieldsets.forEach((fieldset) => {\n      form.querySelectorAll(`[data-fieldset=\"${fieldset.name}\"`).forEach((field) => {\n        fieldset.append(field);\n      });\n    });\n\n    form.dataset.action = pathname.split('.json')[0];\n    form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      const valid = form.checkValidity();\n      if (valid) {\n        handleSubmit(form);\n      } else {\n        const firstInvalidEl = form.querySelector<HTMLElement>(':invalid:not(fieldset)');\n        if (firstInvalidEl) {\n          firstInvalidEl.focus();\n          firstInvalidEl.scrollIntoView({ behavior: 'smooth' });\n        }\n      }\n    });\n  }\n}\n"],"names":["ids","generateFieldId","field","suffix","slug","toClassName","idSuffix","renderLegend","legend","html","renderFieldset","ifDefined","nothing","renderHeading","renderLabel","id","renderPlaintext","renderInputField","hasLabelOnTop","labelId","renderTextareaField","renderCheckboxField","renderSelectFieldOption","option","selectValue","text","value","renderSelectField","renderRadioField","renderButtonField","renderResetField","FIELD_RENDERER_FUNCTIONS","renderField","type","parseFieldData","item","fetchFormData","pathname","FetchService","template","templateArgs","element","generatePayload","form","payload","handleSubmitError","error","handleSubmit","submit","action","response","e","decorate","block","formLink","_a","formData","render","fieldset","firstInvalidEl"],"mappings":"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"}