{"version":3,"file":"form.js","sources":["../../node_modules/@lit/reactive-element/decorators/base.js","../../node_modules/@lit/reactive-element/decorators/query.js","../../src/components/form/form.template.ts","../../src/components/form/form.ts","../../src/blocks/form/form.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e=(e,t,c)=>(c.configurable=!0,c.enumerable=!0,Reflect.decorate&&\"object\"!=typeof t&&Object.defineProperty(e,t,c),c);export{e as desc};\n//# sourceMappingURL=base.js.map\n","import{desc as t}from\"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function e(e,r){return(n,s,i)=>{const o=t=>t.renderRoot?.querySelector(e)??null;if(r){const{get:e,set:r}=\"object\"==typeof s?n:i??(()=>{const t=Symbol();return{get(){return this[t]},set(e){this[t]=e}}})();return t(n,s,{get(){let t=e.call(this);return void 0===t&&(t=o(this),(null!==t||this.hasUpdated)&&r.call(this,t)),t}})}return t(n,s,{get(){return o(this)}})}}export{e as query};\n//# sourceMappingURL=query.js.map\n","import { html, nothing } from 'lit';\nimport { toClassName } from '../../utils/toClassName';\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\n\nexport type FormFieldType =\n  | 'headline'\n  | 'plaintext'\n  | 'text'\n  | 'button'\n  | 'fieldset'\n  | 'select'\n  | 'toggle'\n  | 'radio'\n  | 'checkbox'\n  | 'textarea'\n  | 'reset'\n  | 'submit';\n\nexport interface FormField {\n  class?: string;\n  id?: string;\n  name: string;\n  label: string;\n  fieldset?: string;\n  value?: string;\n  type: FormFieldType;\n}\n\nexport interface FormFieldInput extends FormField {\n  placeholder?: string;\n  required?: boolean;\n}\n\nexport interface FormFieldSelect extends FormField {\n  options: string[];\n  required?: boolean;\n}\n\nconst ids = [];\nconst generateFieldId = (field: FormField, suffix = '') => {\n  const slug = toClassName(`form-${field.name}${suffix}`);\n  ids[slug] = ids[slug] || 0;\n  const idSuffix = ids[slug] ? `-${ids[slug]}` : '';\n  ids[slug] += 1;\n  return `${slug}${idSuffix}`;\n};\n\nconst renderLegend = (legend: string) => {\n  return html` <legend>${legend}</legend> `;\n};\n\nconst renderFieldset = (field: FormField) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      <fieldset class=\"row gtr-uniform\" id=\"${ifDefined(field.id)}\" name=\"${ifDefined(field.name)}\">\n        ${field.label ? renderLegend(field.label) : nothing}\n      </fieldset>\n    </div>\n  `;\n};\n\nconst renderHeading = (field: FormFieldInput) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      ${field.class && field.class.includes('sub-heading')\n        ? html`<h3 id=\"${ifDefined(field.id)}\">${field.value || field.label}</h3>`\n        : html`<h2 id=\"${ifDefined(field.id)}\">${field.value || field.label}</h2>`}\n    </div>\n  `;\n};\n\nconst renderLabel = (id: string, field: FormField) => {\n  return html` <label id=\"${id}\" for=\"${field.id}\">${field.label || field.name}</label> `;\n};\n\nconst renderPlaintext = (field: FormFieldInput) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      <p id=\"${ifDefined(field.id)}\">${field.value || field.label}</p>\n    </div>\n  `;\n};\n\nconst renderInputField = (field: FormFieldInput, hasLabelOnTop = true) => {\n  const labelId = generateFieldId(field, '-label');\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      ${hasLabelOnTop ? renderLabel(labelId, field) : nothing}\n      <input\n        id=\"${ifDefined(field.id)}\"\n        name=\"${ifDefined(field.name)}\"\n        placeholder=\"${ifDefined(field.placeholder)}\"\n        value=\"${ifDefined(field.value)}\"\n        required=\"${ifDefined(field.required)}\"\n        type=\"${ifDefined(field.type)}\"\n        aria-labelledby=\"${labelId}\"\n      />\n      ${!hasLabelOnTop ? renderLabel(labelId, field) : nothing}\n    </div>\n  `;\n};\n\nconst renderTextareaField = (field: FormFieldInput) => {\n  const labelId = generateFieldId(field, '-label');\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      ${field.label ? renderLabel(labelId, field) : nothing}\n      <textarea\n        id=\"${ifDefined(field.id)}\"\n        name=\"${ifDefined(field.name)}\"\n        placeholder=\"${ifDefined(field.placeholder)}\"\n        required=\"${ifDefined(field.required)}\"\n        aria-labelledby=\"${labelId}\"\n      ></textarea>\n    </div>\n  `;\n};\n\nconst renderCheckboxField = (field: FormFieldInput) => {\n  if (!field.value) field.value = 'checked';\n  return renderInputField(field, false);\n};\n\nconst renderSelectFieldOption = (option: string, selectValue) => {\n  const text = option.trim();\n  const value = option.trim().toLowerCase() ?? '';\n  const selected = value === selectValue ? '' : undefined;\n  return html`<option selected=\"${ifDefined(selected)}\" value=\"${value}\">${text}</option>`;\n};\n\nconst renderSelectField = (field: FormFieldSelect) => {\n  const labelId = generateFieldId(field, '-label');\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      ${field.label ? renderLabel(labelId, field) : nothing}\n      <select id=\"${ifDefined(field.id)}\" name=\"${ifDefined(field.name)}\" required=\"${ifDefined(field.required)}\">\n        ${field.options.map((option) => renderSelectFieldOption(option, field.value))}\n      </select>\n    </div>\n  `;\n};\n\nconst renderRadioField = (field: FormFieldInput) => {\n  if (!field.value) field.value = field.label || 'on';\n  return renderInputField(field, false);\n};\n\nconst renderButtonField = (field: FormField) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      <button class=\"${ifDefined(field.class)}\" type=\"${ifDefined(field.type)}\">${field.label || field.name}</button>\n    </div>\n  `;\n};\n\nconst renderResetField = (field: FormFieldInput) => {\n  return html`\n    <div class=\"${ifDefined(field.class)}\" data-fieldset=\"${ifDefined(field.fieldset)}\">\n      <input id=\"${ifDefined(field.id)}\" name=\"${ifDefined(field.name)}\" type=\"reset\" />\n    </div>\n  `;\n};\n\nconst FIELD_RENDERER_FUNCTIONS = {\n  headline: renderHeading,\n  plaintext: renderPlaintext,\n  text: renderInputField,\n  textarea: renderTextareaField,\n  checkbox: renderCheckboxField,\n  select: renderSelectField,\n  radio: renderRadioField,\n  button: renderButtonField,\n  fieldset: renderFieldset,\n  reset: renderResetField,\n  submit: renderButtonField,\n};\n\nexport const renderField = (field: FormField) => {\n  field.id = field.id || generateFieldId(field);\n  const type = field.type;\n  const renderFieldFunc = FIELD_RENDERER_FUNCTIONS[type] || renderInputField;\n  const fieldElements = renderFieldFunc(field);\n\n  return fieldElements;\n};\n","import { html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport FetchService from '../../services/fetch.service.ts';\nimport { FormField, FormFieldInput, FormFieldSelect, FormFieldType, renderField } from './form.template.ts';\n\ntype FormElement = {\n  name: string;\n  type: string;\n  label: string;\n  placeholder: string;\n  options: string;\n  value: string;\n  required: string;\n  id: string;\n  fieldset: string;\n  class: string;\n};\n\ninterface SheetsResponse {\n  type: string;\n  data: FormElement[];\n  offset: number;\n  total: number;\n}\n\ntype FormPayload = Record<string, string>;\n\n@customElement('form-component')\nexport class Form extends LitElement {\n  @state()\n  formData: FormField[];\n\n  @property({ type: String })\n  pathname: string = '';\n\n  @query('form')\n  form: HTMLFormElement;\n\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    await this.fetchFormData();\n    this.setFieldsets();\n  }\n\n  async fetchFormData() {\n    const data: SheetsResponse = await FetchService.fetchJson(this.pathname);\n    const detailsData = data.data.map((item: FormElement) => this.parseFieldData(item));\n    this.formData = detailsData;\n  }\n\n  render() {\n    if (!this.formData) return;\n    return html`\n      <form method=\"post\" data-action=\"${this.pathname.split('.json')[0]}\" @submit=\"${this.submitForm}\">\n        <div class=\"row gtr-uniform\">${this.formData.map((element) => html`${renderField(element)}`)}</div>\n      </form>\n    `;\n  }\n\n  setFieldsets() {\n    // group fields into fieldsets\n    const fieldsets = this.form.querySelectorAll('fieldset');\n    fieldsets.forEach((fieldset) => {\n      this.form.querySelectorAll(`[data-fieldset=\"${fieldset.name}\"`).forEach((field) => {\n        fieldset.append(field);\n      });\n    });\n  }\n\n  parseFieldData(item: FormElement): FormField | FormFieldInput | FormFieldSelect {\n    return {\n      class: item.class !== '' ? item.class : undefined,\n      id: item.id !== '' ? item.id : undefined,\n      name: item.name,\n      label: item.label,\n      fieldset: item.fieldset !== '' ? item.fieldset : undefined,\n      value: item.value !== '' ? item.value : undefined,\n      type: item.type.toLowerCase() as FormFieldType,\n      placeholder: item.placeholder || undefined,\n      options: item.options ? item.options.split(',').map((option: string) => option.trim()) : [],\n      required: item.required.toLowerCase() === 'true' || item.required.toLowerCase() === 'x' ? true : undefined,\n    };\n  }\n\n  generatePayload(form: HTMLFormElement): FormPayload {\n    const payload = {};\n\n    [...(form.elements as HTMLCollectionOf<HTMLFormElement>)].forEach((field) => {\n      if (field.name && field.type !== 'submit' && !field.disabled) {\n        if (field.type === 'radio') {\n          if (field.checked) payload[field.name] = field.value;\n        } else if (field.type === 'checkbox') {\n          if (field.checked)\n            payload[field.name] = payload[field.name] ? `${payload[field.name]},${field.value}` : field.value;\n        } else {\n          payload[field.name] = field.value;\n        }\n      }\n    });\n    return payload;\n  }\n\n  handleSubmitError(form, error) {\n    console.error(error);\n    form.querySelector('button[type=\"submit\"]').disabled = false;\n  }\n\n  submitForm(e: Event) {\n    e.preventDefault();\n    const valid = this.form.checkValidity();\n    if (valid) {\n      this.handleSubmit(this.form);\n    } else {\n      const firstInvalidEl = this.querySelector<HTMLElement>(':invalid:not(fieldset)');\n      if (firstInvalidEl) {\n        firstInvalidEl.focus();\n        firstInvalidEl.scrollIntoView({ behavior: 'smooth' });\n      }\n    }\n  }\n\n  async handleSubmit(form: HTMLFormElement) {\n    if (form.getAttribute('data-submitting') === 'true') return;\n\n    const submit = form.querySelector<HTMLButtonElement>('button[type=\"submit\"]');\n    try {\n      form.setAttribute('data-submitting', 'true');\n      if (submit) submit.disabled = true;\n\n      // create payload\n      const action = form.dataset.action ?? '';\n      const payload = this.generatePayload(form);\n      const response = await fetch(action, {\n        method: 'POST',\n        body: JSON.stringify({ data: payload }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (response.ok) {\n        console.log(payload);\n        if (form.dataset.confirmation) {\n          window.location.href = form.dataset.confirmation;\n        }\n      } else {\n        const error = await response.text();\n        throw new Error(error);\n      }\n    } catch (e) {\n      this.handleSubmitError(form, e);\n    } finally {\n      form.setAttribute('data-submitting', 'false');\n      form.reset();\n      if (submit) submit.disabled = false;\n    }\n  }\n}\n","import { html, render } from 'lit';\nimport '../../components/form/form.ts';\nimport './form.scss';\n\nexport default async function decorate(block: HTMLElement) {\n  const formLink = block.querySelector<HTMLElement>('a[href$=\".json\"]')?.innerText;\n  if (!formLink) return;\n\n  const { pathname } = new URL(formLink);\n  block.innerHTML = '';\n  render(html`<form-component pathname=\"${pathname}\"></form-component>`, block);\n  block.style.display = 'block';\n}\n"],"names":["e","t","c","r","n","i","o","_a","ids","generateFieldId","field","suffix","slug","toClassName","idSuffix","renderLegend","legend","html","renderFieldset","ifDefined","nothing","renderHeading","renderLabel","id","renderPlaintext","renderInputField","hasLabelOnTop","labelId","renderTextareaField","renderCheckboxField","renderSelectFieldOption","option","selectValue","text","value","renderSelectField","renderRadioField","renderButtonField","renderResetField","FIELD_RENDERER_FUNCTIONS","renderField","type","Form","LitElement","detailsData","FetchService","item","element","fieldset","form","payload","error","firstInvalidEl","submit","action","response","__decorateClass","state","property","query","customElement","decorate","block","formLink","pathname","render"],"mappings":"mUAAA;AAAA;AAAA;AAAA;AAAA,GAKA,MAAMA,EAAE,CAAC,EAAEC,EAAEC,KAAKA,EAAE,aAAa,GAAGA,EAAE,WAAW,GAAG,QAAQ,UAAoB,OAAOD,GAAjB,UAAoB,OAAO,eAAe,EAAEA,EAAEC,CAAC,EAAEA,GCJvH;AAAA;AAAA;AAAA;AAAA,GAIG,SAASF,EAAE,EAAEG,EAAE,CAAC,MAAM,CAACC,EAAE,EAAEC,IAAI,CAAC,MAAMC,EAAEL,GAAC,OAAE,QAAAM,EAAAN,EAAE,aAAF,YAAAM,EAAc,cAAc,KAAI,MAAK,GAAGJ,EAAE,CAAC,KAAK,CAAC,IAAIH,EAAE,IAAIG,CAAC,EAAY,OAAO,GAAjB,SAAmBC,EAAEC,IAAI,IAAI,CAAC,MAAMJ,EAAE,OAAM,EAAG,MAAM,CAAC,KAAK,CAAC,OAAO,KAAKA,CAAC,CAAC,EAAE,IAAID,EAAE,CAAC,KAAKC,CAAC,EAAED,CAAC,CAAC,CAAC,GAAC,EAAI,OAAOC,EAAEG,EAAE,EAAE,CAAC,KAAK,CAAC,IAAIH,EAAED,EAAE,KAAK,IAAI,EAAE,OAAgBC,IAAT,SAAaA,EAAEK,EAAE,IAAI,GAAUL,IAAP,MAAU,KAAK,aAAaE,EAAE,KAAK,KAAKF,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,OAAOA,EAAEG,EAAE,EAAE,CAAC,KAAK,CAAC,OAAOE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CCiC5W,MAAME,EAAM,CAAA,EACNC,EAAkB,CAACC,EAAkBC,EAAS,KAAO,CACzD,MAAMC,EAAOC,EAAY,QAAQH,EAAM,IAAI,GAAGC,CAAM,EAAE,EACtDH,EAAII,CAAI,EAAIJ,EAAII,CAAI,GAAK,EACnB,MAAAE,EAAWN,EAAII,CAAI,EAAI,IAAIJ,EAAII,CAAI,CAAC,GAAK,GAC/C,OAAAJ,EAAII,CAAI,GAAK,EACN,GAAGA,CAAI,GAAGE,CAAQ,EAC3B,EAEMC,EAAgBC,GACbC,YAAgBD,CAAM,YAGzBE,EAAkBR,GACfO,gBACSE,EAAUT,EAAM,KAAK,CAAC,oBAAoBS,EAAUT,EAAM,QAAQ,CAAC,2CACvCS,EAAUT,EAAM,EAAE,CAAC,WAAWS,EAAUT,EAAM,IAAI,CAAC,KACvFA,EAAM,MAAQK,EAAaL,EAAM,KAAK,EAAIU,CAAO,oBAMrDC,EAAiBX,GACdO,gBACSE,EAAUT,EAAM,KAAK,CAAC,oBAAoBS,EAAUT,EAAM,QAAQ,CAAC,KAC7EA,EAAM,OAASA,EAAM,MAAM,SAAS,aAAa,EAC/CO,YAAeE,EAAUT,EAAM,EAAE,CAAC,KAAKA,EAAM,OAASA,EAAM,KAAK,QACjEO,YAAeE,EAAUT,EAAM,EAAE,CAAC,KAAKA,EAAM,OAASA,EAAM,KAAK,OAAO,SAK5EY,EAAc,CAACC,EAAYb,IACxBO,eAAmBM,CAAE,UAAUb,EAAM,EAAE,KAAKA,EAAM,OAASA,EAAM,IAAI,WAGxEc,EAAmBd,GAChBO,gBACSE,EAAUT,EAAM,KAAK,CAAC,oBAAoBS,EAAUT,EAAM,QAAQ,CAAC,YACtES,EAAUT,EAAM,EAAE,CAAC,KAAKA,EAAM,OAASA,EAAM,KAAK,aAK3De,EAAmB,CAACf,EAAuBgB,EAAgB,KAAS,CAClE,MAAAC,EAAUlB,EAAgBC,EAAO,QAAQ,EACxC,OAAAO,gBACSE,EAAUT,EAAM,KAAK,CAAC,oBAAoBS,EAAUT,EAAM,QAAQ,CAAC,KAC7EgB,EAAgBJ,EAAYK,EAASjB,CAAK,EAAIU,CAAO,eAE/CD,EAAUT,EAAM,EAAE,CAAC,WACjBS,EAAUT,EAAM,IAAI,CAAC,kBACdS,EAAUT,EAAM,WAAW,CAAC,YAClCS,EAAUT,EAAM,KAAK,CAAC,eACnBS,EAAUT,EAAM,QAAQ,CAAC,WAC7BS,EAAUT,EAAM,IAAI,CAAC,sBACViB,CAAO,MAEzBD,EAA8CN,EAA9BE,EAAYK,EAASjB,CAAK,CAAW,QAG9D,EAEMkB,EAAuBlB,GAA0B,CAC/C,MAAAiB,EAAUlB,EAAgBC,EAAO,QAAQ,EACxC,OAAAO,gBACSE,EAAUT,EAAM,KAAK,CAAC,oBAAoBS,EAAUT,EAAM,QAAQ,CAAC,KAC7EA,EAAM,MAAQY,EAAYK,EAASjB,CAAK,EAAIU,CAAO,kBAE7CD,EAAUT,EAAM,EAAE,CAAC,WACjBS,EAAUT,EAAM,IAAI,CAAC,kBACdS,EAAUT,EAAM,WAAW,CAAC,eAC/BS,EAAUT,EAAM,QAAQ,CAAC,sBAClBiB,CAAO,qBAIlC,EAEME,EAAuBnB,IACtBA,EAAM,QAAOA,EAAM,MAAQ,WACzBe,EAAiBf,EAAO,EAAK,GAGhCoB,EAA0B,CAACC,EAAgBC,IAAgB,CACzD,MAAAC,EAAOF,EAAO,OACdG,EAAQH,EAAO,KAAK,EAAE,eAAiB,GAE7C,OAAOd,sBAAyBE,EADfe,IAAUF,EAAc,GAAK,MACI,CAAC,YAAYE,CAAK,KAAKD,CAAI,WAC/E,EAEME,EAAqBzB,GAA2B,CAC9C,MAAAiB,EAAUlB,EAAgBC,EAAO,QAAQ,EACxC,OAAAO,gBACSE,EAAUT,EAAM,KAAK,CAAC,oBAAoBS,EAAUT,EAAM,QAAQ,CAAC,KAC7EA,EAAM,MAAQY,EAAYK,EAASjB,CAAK,EAAIU,CAAO,gBACvCD,EAAUT,EAAM,EAAE,CAAC,WAAWS,EAAUT,EAAM,IAAI,CAAC,eAAeS,EAAUT,EAAM,QAAQ,CAAC,KACrGA,EAAM,QAAQ,IAAKqB,GAAWD,EAAwBC,EAAQrB,EAAM,KAAK,CAAC,CAAC,iBAIrF,EAEM0B,EAAoB1B,IACnBA,EAAM,QAAaA,EAAA,MAAQA,EAAM,OAAS,MACxCe,EAAiBf,EAAO,EAAK,GAGhC2B,EAAqB3B,GAClBO,gBACSE,EAAUT,EAAM,KAAK,CAAC,oBAAoBS,EAAUT,EAAM,QAAQ,CAAC,oBAC9DS,EAAUT,EAAM,KAAK,CAAC,WAAWS,EAAUT,EAAM,IAAI,CAAC,KAAKA,EAAM,OAASA,EAAM,IAAI,kBAKrG4B,EAAoB5B,GACjBO,gBACSE,EAAUT,EAAM,KAAK,CAAC,oBAAoBS,EAAUT,EAAM,QAAQ,CAAC,gBAClES,EAAUT,EAAM,EAAE,CAAC,WAAWS,EAAUT,EAAM,IAAI,CAAC,wBAKhE6B,EAA2B,CAC/B,SAAUlB,EACV,UAAWG,EACX,KAAMC,EACN,SAAUG,EACV,SAAUC,EACV,OAAQM,EACR,MAAOC,EACP,OAAQC,EACR,SAAUnB,EACV,MAAOoB,EACP,OAAQD,CACV,EAEaG,EAAe9B,GAAqB,CAC/CA,EAAM,GAAKA,EAAM,IAAMD,EAAgBC,CAAK,EAC5C,MAAM+B,EAAO/B,EAAM,KAIZ,OAHiB6B,EAAyBE,CAAI,GAAKhB,GACpBf,CAAK,CAG7C,kMC5Ja,IAAAgC,EAAN,cAAmBC,CAAW,CAA9B,aAAA,CAAA,MAAA,GAAA,SAAA,EAKc,KAAA,SAAA,EAAA,CAKT,kBAAmD,CACpD,OAAA,IACT,CAEA,MAAM,mBAAoB,CACxB,MAAM,kBAAkB,EACxB,MAAM,KAAK,gBACX,KAAK,aAAa,CACpB,CAEA,MAAM,eAAgB,CAEd,MAAAC,GADuB,MAAMC,EAAa,UAAU,KAAK,QAAQ,GAC9C,KAAK,IAAKC,GAAsB,KAAK,eAAeA,CAAI,CAAC,EAClF,KAAK,SAAWF,CAClB,CAEA,QAAS,CACP,GAAK,KAAK,SACH,OAAA3B,qCAC8B,KAAK,SAAS,MAAM,OAAO,EAAE,CAAC,CAAC,cAAc,KAAK,UAAU,kCAC9D,KAAK,SAAS,IAAK8B,GAAY9B,IAAOuB,EAAYO,CAAO,CAAC,EAAE,CAAC,eAGlG,CAEA,cAAe,CAEK,KAAK,KAAK,iBAAiB,UAAU,EAC7C,QAASC,GAAa,CACzB,KAAA,KAAK,iBAAiB,mBAAmBA,EAAS,IAAI,GAAG,EAAE,QAAStC,GAAU,CACjFsC,EAAS,OAAOtC,CAAK,CAAA,CACtB,CAAA,CACF,CACH,CAEA,eAAeoC,EAAiE,CACvE,MAAA,CACL,MAAOA,EAAK,QAAU,GAAKA,EAAK,MAAQ,OACxC,GAAIA,EAAK,KAAO,GAAKA,EAAK,GAAK,OAC/B,KAAMA,EAAK,KACX,MAAOA,EAAK,MACZ,SAAUA,EAAK,WAAa,GAAKA,EAAK,SAAW,OACjD,MAAOA,EAAK,QAAU,GAAKA,EAAK,MAAQ,OACxC,KAAMA,EAAK,KAAK,YAAY,EAC5B,YAAaA,EAAK,aAAe,OACjC,QAASA,EAAK,QAAUA,EAAK,QAAQ,MAAM,GAAG,EAAE,IAAKf,GAAmBA,EAAO,KAAK,CAAC,EAAI,CAAC,EAC1F,SAAUe,EAAK,SAAS,YAAY,IAAM,QAAUA,EAAK,SAAS,YAAkB,IAAA,IAAM,GAAO,MAAA,CAErG,CAEA,gBAAgBG,EAAoC,CAClD,MAAMC,EAAU,CAAA,EAEhB,OAAC,GAAID,EAAK,QAA8C,EAAE,QAASvC,GAAU,CACvEA,EAAM,MAAQA,EAAM,OAAS,UAAY,CAACA,EAAM,WAC9CA,EAAM,OAAS,QACbA,EAAM,UAAiBwC,EAAAxC,EAAM,IAAI,EAAIA,EAAM,OACtCA,EAAM,OAAS,WACpBA,EAAM,UACRwC,EAAQxC,EAAM,IAAI,EAAIwC,EAAQxC,EAAM,IAAI,EAAI,GAAGwC,EAAQxC,EAAM,IAAI,CAAC,IAAIA,EAAM,KAAK,GAAKA,EAAM,OAEtFwC,EAAAxC,EAAM,IAAI,EAAIA,EAAM,MAEhC,CACD,EACMwC,CACT,CAEA,kBAAkBD,EAAME,EAAO,CAC7B,QAAQ,MAAMA,CAAK,EACdF,EAAA,cAAc,uBAAuB,EAAE,SAAW,EACzD,CAEA,WAAW,EAAU,CAGnB,GAFA,EAAE,eAAe,EACH,KAAK,KAAK,cAAc,EAE/B,KAAA,aAAa,KAAK,IAAI,MACtB,CACC,MAAAG,EAAiB,KAAK,cAA2B,wBAAwB,EAC3EA,IACFA,EAAe,MAAM,EACrBA,EAAe,eAAe,CAAE,SAAU,QAAU,CAAA,EAExD,CACF,CAEA,MAAM,aAAaH,EAAuB,CACpC,GAAAA,EAAK,aAAa,iBAAiB,IAAM,OAAQ,OAE/C,MAAAI,EAASJ,EAAK,cAAiC,uBAAuB,EACxE,GAAA,CACGA,EAAA,aAAa,kBAAmB,MAAM,EACvCI,IAAQA,EAAO,SAAW,IAGxB,MAAAC,EAASL,EAAK,QAAQ,QAAU,GAChCC,EAAU,KAAK,gBAAgBD,CAAI,EACnCM,EAAW,MAAM,MAAMD,EAAQ,CACnC,OAAQ,OACR,KAAM,KAAK,UAAU,CAAE,KAAMJ,EAAS,EACtC,QAAS,CACP,eAAgB,kBAClB,CAAA,CACD,EACD,GAAIK,EAAS,GACX,QAAQ,IAAIL,CAAO,EACfD,EAAK,QAAQ,eACR,OAAA,SAAS,KAAOA,EAAK,QAAQ,kBAEjC,CACC,MAAAE,EAAQ,MAAMI,EAAS,OACvB,MAAA,IAAI,MAAMJ,CAAK,CACvB,QACOnD,EAAG,CACL,KAAA,kBAAkBiD,EAAMjD,CAAC,CAAA,QAC9B,CACKiD,EAAA,aAAa,kBAAmB,OAAO,EAC5CA,EAAK,MAAM,EACPI,IAAQA,EAAO,SAAW,GAChC,CACF,CACF,EAlIEG,EAAA,CADCC,EAAM,CAAA,EADIf,EAEX,UAAA,WAAA,CAAA,EAGAc,EAAA,CADCE,EAAS,CAAE,KAAM,OAAQ,CAAA,EAJfhB,EAKX,UAAA,WAAA,CAAA,EAGAc,EAAA,CADCG,EAAM,MAAM,CAAA,EAPFjB,EAQX,UAAA,OAAA,CAAA,EARWA,EAANc,EAAA,CADNI,EAAc,gBAAgB,CAAA,EAClBlB,CAAA,ECxBb,eAA8BmB,EAASC,EAAoB,OACzD,MAAMC,GAAWxD,EAAAuD,EAAM,cAA2B,kBAAkB,IAAnD,YAAAvD,EAAsD,UACvE,GAAI,CAACwD,EAAU,OAEf,KAAM,CAAE,SAAAC,CAAa,EAAA,IAAI,IAAID,CAAQ,EACrCD,EAAM,UAAY,GACXG,EAAAhD,8BAAiC+C,CAAQ,sBAAuBF,CAAK,EAC5EA,EAAM,MAAM,QAAU,OACxB","x_google_ignoreList":[0,1]}