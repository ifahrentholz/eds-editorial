import{x as r,j as l,T as d}from"../__chunks__/lit-element.XkUWx5ik.js";import{a as p}from"../__chunks__/fetch.nZm6Vokn.js";const c=e=>r`<input type="${e.type}" name="${e.name}" id="${e.id}" class="${e.class}" placeholder="${e.placeholder}" ?required="${e.required}">`,$=e=>r`<textarea name="${e.name}" id="${e.id}" class="${e.class}" placeholder="${e.placeholder}" rows="${e.rows||3}" ?required="${e.required}"></textarea>`,b=e=>{var a;return r`<select name="${e.name}" id="${e.id}" class="${e.class}">${(a=e.options)==null?void 0:a.map(t=>r`<option>${t}</option>`)}</select>`},y=e=>r`<input type="radio" name="${e.name}" id="${e.id}" class="${e.class}" placeholder="${e.placeholder}" value="${e.value?e.value:"on"}" ?required="${e.required}">`,h=e=>r`<button type="${e.type}" class="${e.class}" id="${e.id}">${e.label}</button>`,m=e=>r`<button type="submit" class="${e.class}" id="${e.id}">${e.label?e.label:e.name}</button>`,v=e=>({text:c,textarea:$,select:b,radio:y,checkBox:c,button:h,submit:m}[e.type]||c).call(void 0,e),w=e=>({name:e.name,type:e.type,placeholder:e.placeholder,label:e.label,id:e.id,class:e.class,rows:e.rows||void 0,options:e.options?e.options.split(",").map(a=>a.trim()):void 0,value:e.value||e.label||void 0,required:e.required&&(e.required.toLowerCase()==="true"||e.required.toLowerCase()==="x")}),q=async e=>(await p(e)).data.map(s=>w(s)),x=e=>e?r`<div style="padding:35px"><h2>Form</h2><form method="post"><div class="row gtr-uniform">${e.map(a=>r`<div class="${a.class}">${v(a)} <label for="${a.id}">${a.label}</label></div>`)}</div></form></div>`:d;function S(e){const a={};return[...e.elements].forEach(t=>{t.name&&t.type!=="submit"&&!t.disabled&&(t.type==="radio"?t.checked&&(a[t.name]=t.value):t.type==="checkbox"?t.checked&&(a[t.name]=a[t.name]?`${a[t.name]},${t.value}`:t.value):a[t.name]=t.value)}),a}function F(e,a){console.error(a),e.querySelector('button[type="submit"]').disabled=!1}async function g(e){if(e.getAttribute("data-submitting")==="true")return;const a=e.querySelector('button[type="submit"]');try{e.setAttribute("data-submitting","true"),a.disabled=!0;const t=S(e),s=await fetch(e.dataset.action,{method:"POST",body:JSON.stringify({data:t}),headers:{"Content-Type":"application/json"}});if(s.ok)console.log(t),e.dataset.confirmation&&(window.location.href=e.dataset.confirmation);else{const n=await s.text();throw new Error(n)}}catch(t){F(e,t)}finally{e.setAttribute("data-submitting","false"),e.reset.click(),a.disabled=!1}}async function E(e){var i;const a=(i=e.querySelector('a[href$=".json"]'))==null?void 0:i.innerText;if(!a)return;const{pathname:t}=new URL(a),s=await q(t);e.innerHTML="",e.style.removeProperty("display"),l(x(s),e);const n=e.querySelector("form");n&&(n.dataset.action=t.split(".json")[0],n.addEventListener("submit",u=>{if(u.preventDefault(),n.checkValidity())g(n);else{const o=n.querySelector(":invalid:not(fieldset)");o&&(o.focus(),o.scrollIntoView({behavior:"smooth"}))}}))}export{E as default};
//# sourceMappingURL=form.js.map
