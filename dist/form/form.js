import{j as l,T as d,x as n}from"../__chunks__/lit-element.XkUWx5ik.js";import{a as u}from"../__chunks__/fetch.nZm6Vokn.js";const p=t=>({name:t.name,type:t.type,placeholder:t.placeholder,label:t.label,id:t.id,class:t.class,rows:t.rows||void 0,options:t.options?t.options.split(",").map(a=>a.trim()):void 0}),b=async t=>(await u(t)).data.map(r=>p(r)),c=t=>n`<input type="${t.type}" name="${t.name}" id="${t.id}" class="${t.class}" placeholder="${t.placeholder}">`,m=t=>n`<button type="${t.type}" class="${t.class}" id="${t.id}">${t.label}</button>`,y=t=>n`<textarea name="${t.name}" id="${t.id}" class="${t.class}" placeholder="${t.placeholder}" rows="${t.rows||3}"></textarea>`,$=t=>n`<button type="submit" class="${t.class}" id="${t.id}">${t.label?t.label:t.name}</button>`,h=t=>{var a;return n`<select name="${t.name}" id="${t.id}" class="${t.class}">${(a=t.options)==null?void 0:a.map(e=>n`<option>${e}</option>`)}</select>`},v=t=>({text:c,textarea:y,select:h,button:m,submit:$}[t.type]||c).call(void 0,t),w=t=>t?n`<div style="padding:35px"><h2>Form</h2><form method="post"><div class="row gtr-uniform">${t.map(a=>n`<div class="${a.class}">${v(a)} <label for="${a.id}">${a.label}</label></div>`)}</div></form></div>`:d;function S(t){const a={};return[...t.elements].forEach(e=>{e.name&&e.type!=="submit"&&!e.disabled&&(e.type==="radio"?e.checked&&(a[e.name]=e.value):e.type==="checkbox"?e.checked&&(a[e.name]=a[e.name]?`${a[e.name]},${e.value}`:e.value):a[e.name]=e.value)}),a}function x(t,a){console.error(a),t.querySelector('button[type="submit"]').disabled=!1}async function F(t){if(t.getAttribute("data-submitting")==="true")return;const a=t.querySelector('button[type="submit"]');try{t.setAttribute("data-submitting","true"),a.disabled=!0;const e=S(t),r=await fetch(t.dataset.action,{method:"POST",body:JSON.stringify({data:e}),headers:{"Content-Type":"application/json"}});if(r.ok)console.log(e),t.dataset.confirmation&&(window.location.href=t.dataset.confirmation);else{const s=await r.text();throw new Error(s)}}catch(e){x(t,e)}finally{t.setAttribute("data-submitting","false"),t.reset.click(),a.disabled=!1}}async function E(t){const a=t.querySelector('a[href$=".json"]');if(!a)return;const{pathname:e}=new URL(a),r=await b(e);t.innerHTML="",t.style.removeProperty("display"),l(w(r),t);const s=t.querySelector("form");s.dataset.action=e.split(".json")[0],s.addEventListener("submit",i=>{if(i.preventDefault(),s.checkValidity())F(s);else{const o=s.querySelector(":invalid:not(fieldset)");o&&(o.focus(),o.scrollIntoView({behavior:"smooth"}))}})}export{E as default};
//# sourceMappingURL=form.js.map
