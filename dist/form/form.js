import{x as s,T as l,j as h}from"../__chunks__/lit-element.XkUWx5ik.js";import{F as y}from"../__chunks__/fetch.service.jKveWx8q.js";import{t as q}from"../__chunks__/toClassName.qNvfAQ6m.js";import{o as t}from"../__chunks__/if-defined.JfW-uEqn.js";const c=[],$=(e,r="")=>{const a=q(`form-${e.name}${r}`);c[a]=c[a]||0;const n=c[a]?`-${c[a]}`:"";return c[a]+=1,`${a}${n}`},F=e=>s`<legend>${e}</legend>`,x=e=>s`<div class="${t(e.class)}" data-fieldset="${t(e.fieldset)}"><fieldset class="row gtr-uniform" id="${t(e.id)}" name="${t(e.name)}" placeholder="${t(e.placeholder)}" value="${t(e.value)}" required="${t(e.required)}">${e.label?F(e.label):l}</fieldset></div>`,w=e=>s`<div class="${t(e.class)}" data-fieldset="${t(e.fieldset)}">${e.class&&e.class.includes("sub-heading")?s`<h3 id="${t(e.id)}">${e.value||e.label}</h3>`:s`<h2 id="${t(e.id)}">${e.value||e.label}</h2>`}</div>`,u=(e,r)=>s`<label id="${e}" for="${r.id}">${r.label||r.name}</label>`,S=e=>s`<div class="${t(e.class)}" data-fieldset="${t(e.fieldset)}"><p id="${t(e.id)}">${e.value||e.label}</p></div>`,p=(e,r=!0)=>{const a=$(e,"-label");return s`<div class="${t(e.class)}" data-fieldset="${t(e.fieldset)}">${r?u(a,e):l} <input id="${t(e.id)}" name="${t(e.name)}" placeholder="${t(e.placeholder)}" value="${t(e.value)}" required="${t(e.required)}" type="${t(e.type)}" aria-labelledby="${a}"> ${r?l:u(a,e)}</div>`},g=e=>{const r=$(e,"-label");return s`<div class="${t(e.class)}" data-fieldset="${t(e.fieldset)}">${e.label?u(r,e):l} <textarea id="${t(e.id)}" name="${t(e.name)}" placeholder="${t(e.placeholder)}" value="${t(e.value)}" required="${t(e.required)}" aria-labelledby="${r}"></textarea></div>`},E=e=>(e.value||(e.value="checked"),p(e,!1)),L=(e,r)=>{const a=e.trim(),n=e.trim().toLowerCase()??"";return s`<option selected="${t(n===r?"":void 0)}" value="${n}">${a}</option>`},I=e=>{const r=$(e,"-label");return s`<div class="${t(e.class)}" data-fieldset="${t(e.fieldset)}">${e.label?u(r,e):l} <select id="${t(e.id)}" name="${t(e.name)}" placeholder="${t(e.placeholder)}" value="${t(e.value)}" required="${t(e.required)}">${e.options.map(a=>L(a,e.value))}</select></div>`},C=e=>(e.value||(e.value=e.label||"on"),p(e,!1)),m=e=>s`<div class="${t(e.class)}" data-fieldset="${t(e.fieldset)}"><button class="${t(e.class)}" type="${t(e.type)}">${e.label||e.name}</button></div>`,D=e=>s`<div class="${t(e.class)}" data-fieldset="${t(e.fieldset)}"><input id="${t(e.id)}" name="${t(e.name)}" placeholder="${t(e.placeholder)}" value="${t(e.value)}" required="${t(e.required)}" type="reset"></div>`,R={headline:w,plaintext:S,text:p,textarea:g,checkbox:E,select:I,radio:C,button:m,fieldset:x,reset:D,submit:m},T=e=>{e.id=e.id||$(e);const r=e.type.toLowerCase();return(R[r]||p)(e)},k=e=>({name:e.name,type:e.type,label:e.label||"",placeholder:e.placeholder,options:e.options?e.options.split(",").map(r=>r.trim()):[],value:e.value||void 0,required:e.required!==void 0&&(e.required.toLowerCase()==="true"||e.required.toLowerCase()==="x"),id:e.id||"",fieldset:e.fieldset||void 0,class:e.class}),N=async e=>(await y.fetchJson(e)).data.map(n=>k(n)),j=e=>e?s`<div><form method="post"><div class="row gtr-uniform">${e.map(r=>s`${T(r)}`)}</div></form></div>`:l;function A(e){const r={};return[...e.elements].forEach(a=>{a.name&&a.type!=="submit"&&!a.disabled&&(a.type==="radio"?a.checked&&(r[a.name]=a.value):a.type==="checkbox"?a.checked&&(r[a.name]=r[a.name]?`${r[a.name]},${a.value}`:a.value):r[a.name]=a.value)}),r}function P(e,r){console.error(r),e.querySelector('button[type="submit"]').disabled=!1}async function O(e){if(e.getAttribute("data-submitting")==="true")return;const r=e.querySelector('button[type="submit"]');try{e.setAttribute("data-submitting","true"),r&&(r.disabled=!0);const a=e.dataset.action??"",n=A(e),o=await fetch(a,{method:"POST",body:JSON.stringify({data:n}),headers:{"Content-Type":"application/json"}});if(o.ok)console.log(n),e.dataset.confirmation&&(window.location.href=e.dataset.confirmation);else{const d=await o.text();throw new Error(d)}}catch(a){P(e,a)}finally{e.setAttribute("data-submitting","false"),e.reset(),r&&(r.disabled=!1)}}async function B(e){var d;const r=(d=e.querySelector('a[href$=".json"]'))==null?void 0:d.innerText;if(!r)return;const{pathname:a}=new URL(r),n=await N(a);e.innerHTML="",e.style.removeProperty("display"),h(j(n),e);const o=e.querySelector("form");o&&(o.querySelectorAll("fieldset").forEach(i=>{o.querySelectorAll(`[data-fieldset="${i.name}"`).forEach(b=>{i.append(b)})}),o.dataset.action=a.split(".json")[0],o.addEventListener("submit",i=>{if(i.preventDefault(),o.checkValidity())O(o);else{const v=o.querySelector(":invalid:not(fieldset)");v&&(v.focus(),v.scrollIntoView({behavior:"smooth"}))}}))}export{B as default};
//# sourceMappingURL=form.js.map
