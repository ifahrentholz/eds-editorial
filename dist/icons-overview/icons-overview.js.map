{"version":3,"mappings":"qIAEa,MAAAA,EAAa,CAACC,EAAcC,IAChCC,gCAAmCD,GAAcE,CAAO,WAAWH,CAAI,sBCDnEI,EAAc,MAAOC,EAAiBC,EAAkBL,IAC5DC,4CACoBD,GAAcE,CAAO,cACnCE,CAAO,eACNC,CAAQ,uBCFlBC,EAAsB,CAACP,EAAcK,EAAiBC,IACnDJ,2CACoC,IAAMM,EAAoBR,EAAMK,EAASC,CAAQ,CAAC,KACvFP,EAAWC,CAAI,CAAC,YAKlBS,EAAY,CAACJ,EAAiBC,IAAqB,CACvDI,EAAON,EAAYC,EAASC,CAAQ,EAAG,SAAS,IAAI,CACtD,EACME,EAAsB,MAAOG,EAAcN,EAAiBC,IAAqB,CAC/E,gBAAU,UAAU,UAAUK,CAAI,EACxCF,EAAUJ,EAASC,CAAQ,CAC7B,EAEMM,EAAW,CAACC,EAAqBR,EAAiBC,IAC/CJ,gCACHW,EAAU,IAAKb,GAASO,EAAoBP,EAAMK,EAASC,CAAQ,CAAC,CAAC,SAIrEQ,EAAcC,GAAuB,CACzC,MAAMC,EAAOD,EAAM,SAAS,CAAC,EAAE,SAAS,CAAC,EACzC,OAAKC,EACEA,EAAK,UADM,gCAEpB,EAEMC,EAAeF,GAAuB,CAC1C,MAAMT,EAAWS,EAAM,SAAS,CAAC,EAAE,SAAS,CAAC,EAC7C,OAAKT,EACE,OAAOA,EAAS,SAAS,EADV,GAExB,EAEA,SAAwBY,EAASH,EAAoB,CAGnD,MAAMF,EAAY,OAAO,gtCAAiB,EAAE,IAAKM,GAAaA,EAAS,QAAQ,mBAAoB,IAAI,CAAC,EAClGd,EAAUS,EAAWC,CAAK,EAC1BT,EAAWW,EAAYF,CAAK,EAElCA,EAAM,UAAY,GAElBL,EAAOE,EAASC,EAAWR,EAASC,CAAQ,EAAGS,CAAK,CACtD","names":["renderIcon","icon","cssClasses","html","nothing","renderToast","message","duration","renderIconContainer","copyNameToClipboard","showToast","render","name","template","iconNames","getMessage","block","text","getDuration","decorate","iconPath"],"sources":["../../src/components/icon/icon.template.ts","../../src/components/toast/toast.template.ts","../../src/blocks/icons-overview/icons-overview.ts"],"sourcesContent":["import { html, nothing } from 'lit';\n\nexport const renderIcon = (icon: string, cssClasses?: string) => {\n  return html`<icon-component class=\"icon ${cssClasses ?? nothing}\" name=\"${icon}\"></icon-component>`;\n};\n","import { html, nothing } from 'lit';\n\nexport const renderToast = async (message: string, duration: number, cssClasses?: string) => {\n  return html`<toast-component\n    class=\"toast-component ${cssClasses ?? nothing}\"\n    message=\"${message}\"\n    duration=\"${duration}\"\n  ></toast-component>`;\n};\n","import { html, render } from 'lit';\nimport { renderIcon } from '../../components/icon/icon.template.ts';\nimport { renderToast } from '../../components/toast/toast.template.ts';\n\nconst renderIconContainer = (icon: string, message: string, duration: number) => {\n  return html`\n    <button class=\"icon-container\" @click=\"${() => copyNameToClipboard(icon, message, duration)}\">\n      ${renderIcon(icon)}\n    </button>\n  `;\n};\n\nconst showToast = (message: string, duration: number) => {\n  render(renderToast(message, duration), document.body);\n};\nconst copyNameToClipboard = async (name: string, message: string, duration: number) => {\n  await navigator.clipboard.writeText(name);\n  showToast(message, duration);\n};\n\nconst template = (iconNames: string[], message: string, duration: number) => {\n  return html` <div class=\"icons-overview\">\n    ${iconNames.map((icon) => renderIconContainer(icon, message, duration))}\n  </div>`;\n};\n\nconst getMessage = (block: HTMLElement) => {\n  const text = block.children[0].children[0];\n  if (!text) return 'Icon name copied to clipboard!';\n  return text.innerHTML;\n};\n\nconst getDuration = (block: HTMLElement) => {\n  const duration = block.children[0].children[2];\n  if (!duration) return 2000;\n  return Number(duration.innerHTML);\n};\n\nexport default function decorate(block: HTMLElement) {\n  // Vite runs on build time and finds all svg files in icons directory\n  const iconOverview = import.meta.glob('../../icons/*.svg');\n  const iconNames = Object.keys(iconOverview).map((iconPath) => iconPath.replace(/^.*\\/(.*?)\\.svg$/, '$1'));\n  const message = getMessage(block);\n  const duration = getDuration(block);\n\n  block.innerHTML = '';\n\n  render(template(iconNames, message, duration), block);\n}\n"],"file":"icons-overview/icons-overview.js"}