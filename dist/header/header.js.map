{"version":3,"file":"header.js","sources":["../../src/utils/replaceBySpecifier.ts","../../src/components/header.ts"],"sourcesContent":["type ReplaceBySpecifier = {\n  input: string;\n  specifier: string;\n  htmlTag: string;\n};\nexport function replaceBySpecifier({ input, specifier, htmlTag }: ReplaceBySpecifier): string {\n  return input\n    .split(specifier)\n    .map((part, index) => (index % 2 === 1 ? `<${htmlTag}>${part}</${htmlTag}>` : part))\n    .join('');\n}\n","import { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\nimport { LitElement, PropertyValueMap, html } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { fetchData } from '../utils/fetchData';\nimport { replaceBySpecifier } from '../utils/replaceBySpecifier';\n\nexport interface HeaderResponseData {\n  leftCol: LeftCol;\n  rightCol: RightCol;\n}\n\nexport interface LeftCol {\n  data: LeftColData[];\n}\n\nexport interface LeftColData {\n  logoText: string;\n  logoLink: string;\n}\n\nexport interface RightCol {\n  data: RightColData[];\n}\n\nexport interface RightColData {\n  socialIcon: string;\n  socialLabel: string;\n  socialLink: string;\n}\n\ninterface HeaderTemplateData {\n  leftCol: LeftColData;\n  rightCol: RightColData[];\n}\n\n@customElement('header-component')\nexport class HeaderComponent extends LitElement {\n  @state()\n  headerData: HeaderTemplateData;\n\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n\n  protected async firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>) {\n    await this.fetchHeaderData();\n  }\n\n  async fetchHeaderData() {\n    try {\n      const response = await fetchData<HeaderResponseData>({ endpoint: 'header.json', getJson: true });\n      this.headerData = { leftCol: response.leftCol.data[0], rightCol: response.rightCol.data };\n    } catch (error) {\n      console.error('HeaderComponent: ', error);\n    }\n  }\n\n  render() {\n    if (!this.headerData) return;\n    const { leftCol, rightCol } = this.headerData;\n    const logoText = replaceBySpecifier({ input: leftCol.logoText, htmlTag: 'strong', specifier: ':::' });\n    const logoTextHTML = unsafeHTML(logoText);\n    return html`\n      <a href=\"${leftCol.logoLink}\" class=\"logo\"> ${logoTextHTML} </a>\n      <ul class=\"icons\">\n        ${rightCol.map((item) => {\n          return html`\n            <li>\n              <a href=\"${item.socialLink}\" class=\"icon brands\" aria-label=\"${item.socialLabel}\">\n                <icon-component class=\"header-icon\" name=\"${item.socialIcon}\"></icon-component>\n                <span class=\"label\">${item.socialLabel}</span></a\n              >\n            </li>\n          `;\n        })}\n      </ul>\n    `;\n  }\n}\n"],"names":["replaceBySpecifier","input","specifier","htmlTag","part","index","HeaderComponent","LitElement","_changedProperties","response","fetchData","error","leftCol","rightCol","logoText","logoTextHTML","unsafeHTML","html","item","__decorateClass","state","customElement"],"mappings":"iPAKO,SAASA,EAAmB,CAAE,MAAAC,EAAO,UAAAC,EAAW,QAAAC,GAAuC,CACrF,OAAAF,EACJ,MAAMC,CAAS,EACf,IAAI,CAACE,EAAMC,IAAWA,EAAQ,IAAM,EAAI,IAAIF,CAAO,IAAIC,CAAI,KAAKD,CAAO,IAAMC,CAAK,EAClF,KAAK,EAAE,CACZ,iMC0Ba,IAAAE,EAAN,cAA8BC,CAAW,CAIpC,kBAAmD,CACpD,OAAA,IACT,CAEA,MAAgB,aAAaC,EAAuE,CAClG,MAAM,KAAK,iBACb,CAEA,MAAM,iBAAkB,CAClB,GAAA,CACI,MAAAC,EAAW,MAAMC,EAA8B,CAAE,SAAU,cAAe,QAAS,GAAM,EAC1F,KAAA,WAAa,CAAE,QAASD,EAAS,QAAQ,KAAK,CAAC,EAAG,SAAUA,EAAS,SAAS,IAAK,QACjFE,EAAO,CACN,QAAA,MAAM,oBAAqBA,CAAK,CAC1C,CACF,CAEA,QAAS,CACP,GAAI,CAAC,KAAK,WAAY,OACtB,KAAM,CAAE,QAAAC,EAAS,SAAAC,GAAa,KAAK,WAC7BC,EAAWd,EAAmB,CAAE,MAAOY,EAAQ,SAAU,QAAS,SAAU,UAAW,KAAO,CAAA,EAC9FG,EAAeC,EAAWF,CAAQ,EACjC,OAAAG,aACML,EAAQ,QAAQ,kBAAmBG,CAAY,yBAEtDF,EAAS,IAAKK,GACPD,iBAEQC,EAAK,UAAU,qCAAqCA,EAAK,WAAW,+CACjCA,EAAK,UAAU,0CACrCA,EAAK,WAAW,kBAI7C,CAAC,OAGR,CACF,EAxCEC,EAAA,CADCC,EAAM,CAAA,EADId,EAEX,UAAA,aAAA,CAAA,EAFWA,EAANa,EAAA,CADNE,EAAc,kBAAkB,CAAA,EACpBf,CAAA"}