{"version":3,"mappings":"8HAEA,MAAMA,EAAa,CAACC,EAAcC,EAAiBC,IAC1CC,wDAGS,IAAMC,EAAoBJ,EAAMC,EAASC,CAAQ,CAAC,wBAEpDF,CAAI,4BAMdK,EAAY,CAACJ,EAAiBC,IAAqB,CACvD,MAAMI,EAAQH,8BAAkCF,CAAO,eAAeC,CAAQ,uBACvEK,EAAAD,EAAO,SAAS,IAAI,CAC7B,EACMF,EAAsB,MAAOI,EAAcP,EAAiBC,IAAqB,CAC/E,gBAAU,UAAU,UAAUM,CAAI,EACxCH,EAAUJ,EAASC,CAAQ,CAC7B,EAEMO,EAAW,CAACC,EAAqBT,EAAiBC,IAC/CC,gCAAoCO,EAAU,IAAKV,GAASD,EAAWC,EAAMC,EAASC,CAAQ,CAAC,CAAC,SAGnGS,EAAcC,GAAuB,CACzC,MAAMC,EAAOD,EAAM,SAAS,CAAC,EAAE,SAAS,CAAC,EACzC,OAAKC,EACEA,EAAK,UADM,gCAEpB,EAEMC,EAAeF,GAAuB,CAC1C,MAAMV,EAAWU,EAAM,SAAS,CAAC,EAAE,SAAS,CAAC,EAC7C,OAAKV,EACE,OAAOA,EAAS,SAAS,EADV,GAExB,EAEA,SAAwBa,EAASH,EAAoB,CAGnD,MAAMF,EAAY,OAAO,gtCAAiB,EAAE,IAAKM,GAAaA,EAAS,QAAQ,mBAAoB,IAAI,CAAC,EAClGf,EAAUU,EAAWC,CAAK,EAC1BV,EAAWY,EAAYF,CAAK,EAElCA,EAAM,UAAY,GAElBL,EAAOE,EAASC,EAAWT,EAASC,CAAQ,EAAGU,CAAK,CACtD","names":["renderIcon","icon","message","duration","html","copyNameToClipboard","showToast","toast","render","name","template","iconNames","getMessage","block","text","getDuration","decorate","iconPath"],"sources":["../../src/blocks/icon-overview/icon-overview.ts"],"sourcesContent":["import { html, render } from 'lit';\n\nconst renderIcon = (icon: string, message: string, duration: number) => {\n  return html`\n    <div class=\"icon-container\">\n      <icon-component\n        @click=\"${() => copyNameToClipboard(icon, message, duration)}\"\n        class=\"icon\"\n        name=\"${icon}\"\n      ></icon-component>\n    </div>\n  `;\n};\n\nconst showToast = (message: string, duration: number) => {\n  const toast = html` <toast-component message=\"${message}\" duration=\"${duration}\"></toast-component>`;\n  render(toast, document.body);\n};\nconst copyNameToClipboard = async (name: string, message: string, duration: number) => {\n  await navigator.clipboard.writeText(name);\n  showToast(message, duration);\n};\n\nconst template = (iconNames: string[], message: string, duration: number) => {\n  return html` <div class=\"icons-overview\">${iconNames.map((icon) => renderIcon(icon, message, duration))}</div>`;\n};\n\nconst getMessage = (block: HTMLElement) => {\n  const text = block.children[0].children[0];\n  if (!text) return 'Icon name copied to clipboard!';\n  return text.innerHTML;\n};\n\nconst getDuration = (block: HTMLElement) => {\n  const duration = block.children[0].children[2];\n  if (!duration) return 2000;\n  return Number(duration.innerHTML);\n};\n\nexport default function decorate(block: HTMLElement) {\n  // Vite runs on build time and finds all svg files in icons directory\n  const iconOverview = import.meta.glob('../../icons/*.svg');\n  const iconNames = Object.keys(iconOverview).map((iconPath) => iconPath.replace(/^.*\\/(.*?)\\.svg$/, '$1'));\n  const message = getMessage(block);\n  const duration = getDuration(block);\n\n  block.innerHTML = '';\n\n  render(template(iconNames, message, duration), block);\n}\n"],"file":"icon-overview/icon-overview.js"}