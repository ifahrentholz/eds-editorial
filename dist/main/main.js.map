{"version":3,"mappings":"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","names":["r","t","e","h","o","n","s","i","_a","_b","SidebarNav","LitElement","entry","groups","FetchService","item","firstLevelPath","group","html","currentTarget","child","__decorateClass","state","customElement","SidebarContact","contactHtml","parser","contactHtmlString","headline","nothing","text","contacts","contact","icon","markup","contactsElement","contactElement","unsafeHTML","SidebarPosts","posts","siteMapEntry","sitemapEntry","nextSitemapEntry","createOptimizedPicture","SidebarFooter","response","responseMarkup","SidebarComponent","createRef","ref","replaceBySpecifier","input","specifier","htmlTag","part","index","HeaderComponent","_changedProperties","error","leftCol","rightCol","logoText","logoTextHTML","toClassName","name","BlockService","block","config","row","cols","col","value","as","a","imgs","img","ps","main","shortBlockName","blockWrapper","section","toCamelCase","g","SectionService","blockService","container","sectionMeta","meta","key","style","wrappers","defaultContent","wrapper","parentElement","addClasses","element","classes","c","getMetadata","doc","attr","m","MainService","sectionService","body","SectionsPromises","scriptEl","sidebarContainer","children","template","theme","blockMap","status","blockModule","__vitePreload","href","resolve","reject","link","firstSection","blockPromises","lcpCandidate","sectionsBlocks"],"sources":["../../node_modules/@lit/reactive-element/decorators/state.js","../../node_modules/lit-html/directives/ref.js","../../src/components/sidebar/sidebarNav.ts","../../src/components/sidebar/sidebarContact.ts","../../src/components/sidebar/sidebarPosts.ts","../../src/components/sidebar/sidebarFooter.ts","../../src/components/sidebar/sidebar.ts","../../src/utils/replaceBySpecifier.ts","../../src/components/header.ts","../../src/utils/toClassName.ts","../../src/services/block.service.ts","../../src/utils/toCamelCase.ts","../../src/services/section.service.ts","../../src/utils/addClasses.ts","../../src/utils/getMetadata.ts","../../src/services/main.service.ts","../../src/main.ts"],"sourcesContent":["import{property as t}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function r(r){return t({...r,state:!0,attribute:!1})}export{r as state};\n//# sourceMappingURL=state.js.map\n","import{nothing as t}from\"../lit-html.js\";import{AsyncDirective as i}from\"../async-directive.js\";import{directive as s}from\"../directive.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const e=()=>new h;class h{}const o=new WeakMap,n=s(class extends i{render(i){return t}update(i,[s]){const e=s!==this.Y;return e&&void 0!==this.Y&&this.rt(void 0),(e||this.lt!==this.ct)&&(this.Y=s,this.ht=i.options?.host,this.rt(this.ct=i.element)),t}rt(t){if(\"function\"==typeof this.Y){const i=this.ht??globalThis;let s=o.get(i);void 0===s&&(s=new WeakMap,o.set(i,s)),void 0!==s.get(this.Y)&&this.Y.call(this.ht,void 0),s.set(this.Y,t),void 0!==t&&this.Y.call(this.ht,t)}else this.Y.value=t}get lt(){return\"function\"==typeof this.Y?o.get(this.ht??globalThis)?.get(this.Y):this.Y?.value}disconnected(){this.lt===this.ct&&this.rt(void 0)}reconnected(){this.rt(this.ct)}});export{e as createRef,n as ref};\n//# sourceMappingURL=ref.js.map\n","import { html, LitElement } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\n\nimport '../icon';\nimport { SheetsResponse, SiteMapEntry } from '../../shared.types';\nimport FetchService from '../../services/fetch.service.ts';\n\ninterface SubMenuItem {\n  path: string;\n  navtitle: string;\n}\n\ninterface MenuItem {\n  path: string;\n  navtitle: string;\n  children?: SubMenuItem[];\n}\n\n@customElement('sidebar-nav')\nexport class SidebarNav extends LitElement {\n  @state()\n  items: MenuItem[];\n\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n\n  async firstUpdated() {\n    this.items = await this.groupByFirstLevelPath();\n  }\n\n  render() {\n    if (!this.items) return;\n    return html` <nav id=\"menu\">\n      <header class=\"major\">\n        <h2>Menu</h2>\n      </header>\n      ${this.renderMenuItems()}\n    </nav>`;\n  }\n\n  private toggleSubmenu({ currentTarget }: Event) {\n    if (!(currentTarget instanceof HTMLElement) || !currentTarget.classList.contains('opener')) return;\n    currentTarget.classList.toggle('active');\n  }\n\n  private renderSubMenu(item) {\n    return html`<span @click=\"${this.toggleSubmenu}\" class=\"opener submenu\">\n        <span class=\"submenu__text\">${item.navtitle} </span>\n        <icon-component class=\"submenu__icon\" name=\"chevron-down\"></icon-component>\n      </span>\n      <ul>\n        ${item.children.map((child) => html` <li><a href=\"${child.path}\">${child.navtitle}</a></li>`)}\n      </ul>`;\n  }\n\n  private renderMenuItem(item: MenuItem) {\n    return html` <li>\n      ${item.children !== undefined ? this.renderSubMenu(item) : html`<a href=\"${item.path}\">${item.navtitle}</a>`}\n    </li>`;\n  }\n\n  private renderMenuItems() {\n    return html` <ul>\n      ${this.items.map((item: MenuItem) => this.renderMenuItem(item))}\n    </ul>`;\n  }\n\n  private getSubmenuName = (entry: SiteMapEntry) => {\n    return entry.path.split('/')[1];\n  };\n\n  private getNavTitle(item: SiteMapEntry) {\n    if (item.path === '/') return 'Homepage';\n    return item.navtitle || item.title;\n  }\n\n  groupByFirstLevelPath = async () => {\n    const groups = {};\n    const queryIndex = await FetchService.fetchJson<SheetsResponse>('/query-index.json');\n\n    queryIndex.data.forEach((item) => {\n      const firstLevelPath = this.getSubmenuName(item); // Extracting the first level of the path\n      if (!groups[firstLevelPath]) {\n        groups[firstLevelPath] = [];\n      }\n      groups[firstLevelPath].push({\n        path: item.path,\n        navtitle: this.getNavTitle(item),\n      });\n    });\n\n    const groupedData = Object.values(groups);\n\n    return groupedData.map((group: MenuItem[]) => {\n      if (group.length === 1) {\n        return group[0];\n      }\n\n      return {\n        navtitle: group[0].path.split('/')[1],\n        path: group[0].path,\n        children: group,\n      };\n    });\n  };\n}\n","import { html, LitElement, nothing } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\nimport FetchService from '../../services/fetch.service.ts';\n\ninterface SidebarContactTemplateArgs {\n  headline: HTMLElement | null;\n  text: HTMLElement | null;\n  contacts: Contact[];\n}\n\ninterface Contact {\n  icon: HTMLElement | null;\n  markup: HTMLElement | null;\n}\n\n@customElement('sidebar-contact')\nexport class SidebarContact extends LitElement {\n  @state()\n  contactTemplateArgs: SidebarContactTemplateArgs;\n\n  async connectedCallback() {\n    super.connectedCallback();\n    const contactHtml = await this.fetchContactsHtml();\n    this.getContactTemplateArgs(contactHtml);\n  }\n\n  async fetchContactsHtml() {\n    const parser = new DOMParser();\n    const contactHtmlString = await FetchService.fetchText('contact.plain.html');\n    return parser.parseFromString(contactHtmlString, 'text/html');\n  }\n\n  renderHeader(headline: HTMLElement | null) {\n    if (!headline) return nothing;\n    return html`<header class=\"major\">\n      <h2>${headline}</h2>\n    </header>`;\n  }\n\n  renderText(text: HTMLElement | null) {\n    if (!text) return nothing;\n    return html`<p>${text}</p>`;\n  }\n\n  render() {\n    if (!this.contactTemplateArgs) return nothing;\n\n    const { headline, text, contacts } = this.contactTemplateArgs;\n\n    return html`\n      <section>${this.renderHeader(headline)} ${this.renderText(text)} ${this.renderContacts(contacts)}</section>\n    `;\n  }\n\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n\n  private renderContact(contact: Contact) {\n    const { icon, markup } = contact;\n    if (!icon && !markup) return nothing;\n\n    return html` <li class=\"icon solid\">${this.renderIcon(icon)} ${this.renderContactMarkup(markup)}</li>`;\n  }\n\n  private getContactsArgs(contactHtml: Document): Contact[] {\n    const contactsElement = contactHtml.querySelectorAll('.contact > div:not(:first-child)');\n    const contactsArray = Array.from(contactsElement);\n\n    return contactsArray.map((contactElement) => {\n      return {\n        icon: contactElement.querySelector('div'),\n        markup: contactElement.querySelector('div:last-child'),\n      };\n    });\n  }\n\n  private getContactTemplateArgs(contactHtml: Document) {\n    const headline = contactHtml.querySelector('h2');\n    const text = contactHtml.querySelector('p');\n    const contacts = this.getContactsArgs(contactHtml);\n\n    this.contactTemplateArgs = {\n      headline,\n      text,\n      contacts,\n    };\n  }\n\n  private renderContacts(contacts: Contact[]) {\n    if (contacts.length === 0) return nothing;\n    return html`<ul class=\"contact\">\n      ${contacts.map((contact) => this.renderContact(contact))}\n    </ul>`;\n  }\n\n  private renderIcon(icon: HTMLElement | null) {\n    if (!icon) return nothing;\n    return html`<icon-component class=\"icon-component\" name=\"${icon.innerHTML}\"></icon-component>`;\n  }\n\n  private renderContactMarkup(markup: HTMLElement | null) {\n    if (!markup) return nothing;\n    return unsafeHTML(markup.innerHTML);\n  }\n}\n","import { html, LitElement } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { createOptimizedPicture } from '../../utils/createOptimizedPicture.ts';\nimport { SheetsResponse, Sitemap, SiteMapEntry } from '../../shared.types.ts';\nimport FetchService from '../../services/fetch.service.ts';\n\n@customElement('sidebar-posts')\nexport class SidebarPosts extends LitElement {\n  @state()\n  private lastTreePosts: Sitemap;\n\n  constructor() {\n    super();\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    const posts = await this.getPosts();\n    this.lastTreePosts = this.getLastThreePosts(posts);\n  }\n\n  render() {\n    if (!this.lastTreePosts) return;\n    return html`\n      <header class=\"major\">\n        <h2>Newest Posts</h2>\n      </header>\n      <div class=\"mini-posts\">${this.lastTreePosts.map((siteMapEntry) => this.renderPost(siteMapEntry))}</div>\n    `;\n\n    //TODO: Add overview if more button is needed\n    /*\n     <ul class=\"actions\">\n        <li><a href=\"#\" class=\"button\">More</a></li>\n      </ul>\n    */\n  }\n\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n\n  private getLastThreePosts(posts: Sitemap) {\n    posts.sort((sitemapEntry: SiteMapEntry, nextSitemapEntry: SiteMapEntry) => {\n      if (sitemapEntry.lastModified > nextSitemapEntry.lastModified) {\n        return -1;\n      } else if (sitemapEntry.lastModified < nextSitemapEntry.lastModified) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    return posts.slice(0, 3);\n  }\n\n  private renderPost(siteMapEntry: SiteMapEntry) {\n    return html` <article>\n      <a href=\"${siteMapEntry.path}\" class=\"image\">\n        ${createOptimizedPicture({ src: siteMapEntry.image, alt: siteMapEntry.imagealt, width: '336', height: '224' })}\n      </a>\n      <p>${siteMapEntry.description}</p>\n    </article>`;\n  }\n\n  private async getPosts() {\n    const queryIndex = await FetchService.fetchJson<SheetsResponse>('/query-index.json');\n    return queryIndex.data.filter((item) => item.path.includes('/posts'));\n  }\n}\n","import { html, LitElement } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport FetchService from '../../services/fetch.service.ts';\n\n@customElement('sidebar-footer')\nexport class SidebarFooter extends LitElement {\n  @state()\n  footerMarkup: HTMLParagraphElement | null;\n\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.fetchFooterData();\n  }\n\n  async fetchFooterData() {\n    const response = await FetchService.fetchText('footer.plain.html');\n    const responseMarkup = document.createElement('div');\n    responseMarkup.innerHTML = response;\n    this.footerMarkup = responseMarkup.querySelector('p');\n    if (this.footerMarkup) this.footerMarkup.classList.add('copyright');\n  }\n\n  render() {\n    if (!this.footerMarkup) return;\n    return html`${this.footerMarkup}`;\n  }\n}\n","/**\n * @module SidebarComponent\n * @copyright diva-e (https://diva-e.com)\n */\n\nimport { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { Ref, createRef, ref } from 'lit/directives/ref.js';\n\nimport './sidebarNav.ts';\nimport './sidebarContact.ts';\nimport './sidebarPosts.ts';\nimport './sidebarFooter.ts';\n\n@customElement('sidebar-component')\nexport class SidebarComponent extends LitElement {\n  toggleRef: Ref<HTMLAnchorElement> = createRef();\n  createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n\n  firstUpdated(): void {\n    this.toggleRef.value!.addEventListener('click', this.handleToggleClick);\n    this.classList.add('activate-animations');\n  }\n\n  handleToggleClick = (e: Event) => {\n    e.preventDefault();\n    this.classList.toggle('active');\n  };\n\n  render() {\n    return html`\n      <div class=\"inner\">\n        <sidebar-nav></sidebar-nav>\n        <sidebar-posts></sidebar-posts>\n        <sidebar-contact></sidebar-contact>\n        <sidebar-footer id=\"footer\"></sidebar-footer>\n      </div>\n      <a ${ref(this.toggleRef)} href=\"#sidebar\" class=\"toggle hamburger-icon\" aria-label=\"Sidebar toggle\">\n        <icon-component class=\"icon-component\" name=\"hamburger\"></icon-component>\n      </a>\n    `;\n  }\n}\n","type ReplaceBySpecifier = {\n  input: string;\n  specifier: string;\n  htmlTag: string;\n};\nexport function replaceBySpecifier({ input, specifier, htmlTag }: ReplaceBySpecifier): string {\n  return input\n    .split(specifier)\n    .map((part, index) => (index % 2 === 1 ? `<${htmlTag}>${part}</${htmlTag}>` : part))\n    .join('');\n}\n","import { html, LitElement, PropertyValueMap } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { replaceBySpecifier } from '../utils/replaceBySpecifier.ts';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\nimport FetchService from '../services/fetch.service.ts';\n\nexport interface HeaderResponseData {\n  leftCol: LeftCol;\n  rightCol: RightCol;\n}\n\nexport interface LeftCol {\n  data: LeftColData[];\n}\n\nexport interface LeftColData {\n  logoText: string;\n  logoLink: string;\n}\n\nexport interface RightCol {\n  data: RightColData[];\n}\n\nexport interface RightColData {\n  socialIcon: string;\n  socialLabel: string;\n  socialLink: string;\n}\n\ninterface HeaderTemplateData {\n  leftCol: LeftColData;\n  rightCol: RightColData[];\n}\n\n@customElement('header-component')\nexport class HeaderComponent extends LitElement {\n  @state()\n  headerData: HeaderTemplateData;\n\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    return this;\n  }\n\n  protected async firstUpdated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>) {\n    await this.fetchHeaderData();\n  }\n\n  async fetchHeaderData() {\n    try {\n      const response = await FetchService.fetchJson<HeaderResponseData>('header.json');\n      this.headerData = { leftCol: response.leftCol.data[0], rightCol: response.rightCol.data };\n    } catch (error) {\n      console.error('HeaderComponent: ', error);\n    }\n  }\n\n  render() {\n    if (!this.headerData) return;\n    const { leftCol, rightCol } = this.headerData;\n    const logoText = replaceBySpecifier({ input: leftCol.logoText, htmlTag: 'strong', specifier: ':::' });\n    const logoTextHTML = unsafeHTML(logoText);\n    return html`\n      <a href=\"${leftCol.logoLink}\" class=\"logo\">${logoTextHTML}</a>\n      <ul class=\"icons\">\n        ${rightCol.map((item) => {\n          return html`\n            <li>\n              <a href=\"${item.socialLink}\" class=\"icon brands\" aria-label=\"${item.socialLabel}\">\n                <icon-component class=\"header-icon\" name=\"${item.socialIcon}\"></icon-component>\n                <span class=\"label\">${item.socialLabel}</span>\n              </a>\n            </li>\n          `;\n        })}\n      </ul>\n    `;\n  }\n}\n","export function toClassName(name: string) {\n  return typeof name === 'string'\n    ? name\n        .toLowerCase()\n        .replace(/[^0-9a-z]/gi, '-')\n        .replace(/-+/g, '-')\n        .replace(/^-|-$/g, '')\n    : '';\n}\n","import { toClassName } from '../utils/toClassName';\n\nexport class BlockService {\n  //TODO: Provider for fetch data\n\n  /**\n   * Extracts the config from a block.\n   * @param {Element} block The block element\n   * @returns {object} The block config\n   */\n  readBlockConfig(block: Element): Record<string, any> {\n    const config: Record<any, any> = {};\n    block.querySelectorAll(':scope > div').forEach((row) => {\n      if (row.children) {\n        const cols = [...row.children];\n        if (cols[1]) {\n          const col = cols[1];\n          const name = toClassName(cols[0].textContent ?? '');\n          let value: any = '';\n          if (col.querySelector('a')) {\n            const as = [...col.querySelectorAll('a')];\n            if (as.length === 1) {\n              value = as[0].href;\n            } else {\n              value = as.map((a) => a.href);\n            }\n          } else if (col.querySelector('img')) {\n            const imgs = [...col.querySelectorAll('img')];\n            if (imgs.length === 1) {\n              value = imgs[0].src;\n            } else {\n              value = imgs.map((img) => img.src);\n            }\n          } else if (col.querySelector('p')) {\n            const ps = [...col.querySelectorAll('p')];\n            if (ps.length === 1) {\n              value = ps[0].textContent;\n            } else {\n              value = ps.map((p) => p.textContent);\n            }\n          } else value = row.children[1].textContent;\n          config[name] = value;\n        }\n      }\n    });\n    return config;\n  }\n\n  /**\n   * Decorates all blocks in a container element.\n   * @param {Element} main The container element\n   */\n  decorateBlocks(main: HTMLElement) {\n    main.querySelectorAll<HTMLDivElement>('div.section > div > div').forEach(this.decorateBlock);\n  }\n\n  /**\n   * Decorates a block.\n   * @param {Element} block The block element\n   */\n  private decorateBlock(block: HTMLElement) {\n    const shortBlockName = block.classList[0];\n    if (shortBlockName) {\n      block.classList.add('block');\n      block.dataset.blockName = shortBlockName;\n      const blockWrapper = block.parentElement;\n      blockWrapper?.classList.add(`${shortBlockName}-wrapper`);\n      const section = block.closest('.section');\n      if (section) section.classList.add(`${shortBlockName}-container`);\n    }\n  }\n}\n","import { toClassName } from './toClassName';\n\n/**\n * Sanitizes a string for use as a js property name.\n * @param {string} name The unsanitized string\n * @returns {string} The camelCased name\n */\nexport function toCamelCase(name: string) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}\n","import { toCamelCase } from '../utils/toCamelCase';\nimport { toClassName } from '../utils/toClassName';\nimport { BlockService } from './block.service';\n\nexport class SectionService {\n  constructor(private blockService: BlockService) {}\n\n  init(container: HTMLElement) {\n    this.transformSection(container);\n  }\n\n  /**\n   * Decorates all sections in a container element.\n   * @param {Element} main The container element\n   */\n  private transformSection(main: HTMLElement) {\n    main.querySelectorAll<HTMLDivElement>(':scope > div').forEach((section) => {\n      this.adjustMarkup(section);\n      this.processSectionMetaData(section);\n    });\n  }\n\n  private processSectionMetaData(section: HTMLElement) {\n    // Process section metadata\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = this.blockService.readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style\n            .split(',')\n            .filter((style: string) => style)\n            .map((style: string) => toClassName(style.trim()));\n          styles.forEach((style: string) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      if (sectionMeta.parentElement) sectionMeta.parentElement.remove();\n    }\n  }\n\n  private adjustMarkup(section: HTMLDivElement) {\n    const wrappers: HTMLDivElement[] = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n\n        if (defaultContent) {\n          wrapper.classList.add('default-content-wrapper');\n        }\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    this.decorateImages();\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n  }\n  decorateImages() {\n    const picture = document.querySelectorAll('.default-content-wrapper picture');\n    picture.forEach((item) => {\n      const parentElement = item.parentElement;\n      if (parentElement) {\n        parentElement.classList.add('image', 'main');\n      }\n    });\n  }\n}\n","import { toClassName } from './toClassName';\n\nexport const addClasses = (element: HTMLElement, classes: string) => {\n  classes.split(',').forEach((c) => {\n    element.classList.add(toClassName(c.trim()));\n  });\n};\n","export function getMetadata(name: string, doc = document) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const metaTags: HTMLMetaElement[] =\n    ([...doc.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)] as HTMLMetaElement[]) || [];\n  const meta = metaTags\n    .map((m) => {\n      return m.content;\n    })\n    .join(', ');\n  return meta.length ? meta : '';\n}\n","import { addClasses } from '../utils/addClasses';\nimport { getMetadata } from '../utils/getMetadata';\nimport { BlockService } from './block.service';\nimport { SectionService } from './section.service';\n\ntype BlockMapping = {\n  name: string;\n  element: HTMLDivElement;\n};\n\ninterface LcpCandidate extends HTMLElement {\n  complete: boolean;\n}\n\nexport class MainService {\n  private lcpBlocks = ['banner'];\n\n  constructor(\n    private sectionService: SectionService,\n    private blockService: BlockService\n  ) {}\n\n  init = async () => {\n    this.setup();\n    await this.loadEager();\n    await this.loadLazy();\n  };\n\n  /**\n   * Setup block utils.\n   */\n  private setup() {\n    window.hlx = window.hlx || {};\n    window.hlx.RUM_MASK_URL = 'full';\n    window.hlx.codeBasePath = '';\n    window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n\n    const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]') as HTMLScriptElement;\n    if (scriptEl) {\n      try {\n        [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      }\n    }\n  }\n\n  private loadEager = async () => {\n    // TODO: how to support different languages here\n    document.documentElement.lang = 'en';\n    this.decorateTemplateAndTheme();\n    if (document) {\n      const body = document.querySelector('body');\n      if (body) {\n        body.style.display = 'none';\n      }\n    }\n    const main = document.querySelector('main');\n    if (main) {\n      main.setAttribute('id', 'main');\n      this.addSidebarContainer(main);\n      this.sectionService.init(main);\n      this.addInnerContainer(main); // TODO refactor initializing\n      this.blockService.decorateBlocks(main);\n\n      // TODO: Performance adjustment\n      setTimeout(() => {\n        document.body.removeAttribute('style');\n      }, 100);\n\n      await this.waitForLCP();\n\n      try {\n        /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n        if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n          await this.loadFonts();\n        }\n      } catch (e) {\n        // do nothing\n      }\n    }\n  };\n\n  private addSidebarContainer(main: HTMLElement) {\n    const sidebarContainer = document.createElement('sidebar-component');\n    sidebarContainer.setAttribute('id', 'sidebar');\n    window.innerWidth <= 1280 ? sidebarContainer.classList.remove('active') : sidebarContainer.classList.add('active');\n    main.after(sidebarContainer);\n  }\n\n  private addInnerContainer(main: HTMLElement) {\n    const children = main.innerHTML;\n    main.innerHTML = `<div class=\"inner\"><header-component id=\"header\"></header-component>${children}</div>`;\n  }\n\n  private loadLazy = async () => {\n    await this.loadFonts();\n    await this.loadBlocks();\n  };\n\n  private decorateTemplateAndTheme() {\n    const template = getMetadata('template');\n    if (template) addClasses(document.body, template);\n    const theme = getMetadata('theme');\n    if (theme) addClasses(document.body, theme);\n  }\n\n  /**\n   * Loads Blocks\n   * by getting all sections and load every block in every section\n   * and shows every section that is finished loading.\n   */\n  private loadBlocks = async () => {\n    const sections = [...document.querySelectorAll<HTMLElement>('.section')];\n    const SectionsPromises = sections.map((section) => this.loadBlock(section));\n\n    await Promise.all(SectionsPromises);\n  };\n\n  private collectBlocks(section: HTMLElement): BlockMapping[] {\n    const blockMap: BlockMapping[] = [];\n    const blocksElements = section.querySelectorAll<HTMLDivElement>('[data-block-name]');\n\n    blocksElements.forEach((block: HTMLDivElement) => {\n      blockMap.push({\n        name: block.dataset['blockName'] as string,\n        element: block,\n      });\n    });\n\n    return blockMap;\n  }\n\n  private async loadBlockModules(block: BlockMapping) {\n    const status = block.element.dataset.blockStatus;\n\n    if (status !== 'loading' && status !== 'loaded') {\n      block.element.dataset.blockStatus = 'loading';\n\n      const blockModule = await import(`${window.hlx.codeBasePath}/dist/${block.name}/${block.name}.js`);\n\n      if (blockModule.default) {\n        await blockModule.default(block.element);\n      }\n\n      block.element.dataset.blockStatus = 'loaded';\n    }\n  }\n\n  private showSection(section: HTMLElement) {\n    section.style.removeProperty('display');\n  }\n\n  private async loadFonts() {\n    await this.loadCSS(`${window.hlx.codeBasePath}/dist/fonts/fonts.css`);\n    try {\n      if (!window.location.hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  private async loadCSS(href: string) {\n    return new Promise((resolve, reject) => {\n      if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = href;\n        link.onload = resolve;\n        link.onerror = reject;\n        document.head.append(link);\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private async waitForLCP() {\n    /* Js Chunks should be loaded\n    Old logic only looks after the first block\n    New logic looks in the first section after lcp candidates, \n    since we show ech section depending on if its blocks and modules are loaded */\n    const firstSection: HTMLElement | null = document.querySelector('.section');\n\n    if (firstSection) {\n      const blocks = this.collectBlocks(firstSection);\n      const blockPromises = blocks.map(async (block) => {\n        const hasLCPBlock = this.lcpBlocks.includes(block.name);\n        if (hasLCPBlock) await this.loadBlockModules(block);\n      });\n\n      await Promise.all(blockPromises);\n      this.showSection(firstSection);\n    }\n\n    // @ts-ignore\n    document.body.style.display = null;\n    const lcpCandidate = document.querySelector<LcpCandidate>('main img');\n\n    await new Promise<void>((resolve) => {\n      if (lcpCandidate && !lcpCandidate.complete) {\n        lcpCandidate.setAttribute('loading', 'eager');\n        lcpCandidate.setAttribute('fetchpriority', 'high');\n        lcpCandidate.addEventListener('load', () => resolve());\n        lcpCandidate.addEventListener('error', () => resolve());\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  private async loadBlock(section: HTMLElement) {\n    const sectionsBlocks: BlockMapping[] = this.collectBlocks(section);\n    if (!sectionsBlocks.length) {\n      this.showSection(section);\n      return;\n    }\n\n    for (const block of sectionsBlocks) {\n      await this.loadBlockModules(block);\n    }\n\n    this.showSection(section);\n  }\n}\n","// const LCP_BLOCKS: string[] = []; // add your LCP blocks to the list\n\nimport './components/sidebar/sidebar.ts';\nimport './components/header.ts';\nimport './services/fetch.service.ts';\nimport { BlockService } from './services/block.service.ts';\nimport { SectionService } from './services/section.service.ts';\nimport { MainService } from './services/main.service.ts';\n\n// function preloadLcpImageCandidate() {\n//   const lcpCandidate = document.querySelector('main img') as HTMLImageElement | null;\n//   const linkTag = document.createElement('link');\n//   linkTag.rel = 'preload';\n//   linkTag.as = 'image';\n//   linkTag.href = lcpCandidate?.src || '';\n//   // linkTag.type = getLinkTypeFromImageExt(lcpCandidate?.src);\n//   document.head.appendChild(linkTag);\n// }\n\n(async function () {\n  // preloadLcpImageCandidate();\n  const blockService = new BlockService();\n  const sectionService = new SectionService(blockService);\n  const main = new MainService(sectionService, blockService);\n  await main.init();\n})();\n\ndeclare global {\n  interface Window {\n    hlx: {\n      RUM_MASK_URL: string;\n      codeBasePath: string;\n      lighthouse: boolean;\n    };\n  }\n}\n"],"file":"main/main.js"}